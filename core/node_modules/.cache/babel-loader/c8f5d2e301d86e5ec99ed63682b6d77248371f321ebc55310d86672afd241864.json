{"ast":null,"code":"import auth from '@/assets/auth';\nimport MessageAnnounce from './MessageAnnounce.vue';\nexport default {\n  name: 'SetUp',\n  components: {\n    MessageAnnounce\n  },\n  data() {\n    return {\n      menuItem: 'globals',\n      announce: null,\n      globals: {\n        event_name: 'xxxx',\n        event_payoff: 'ccccc',\n        event_date: null,\n        event_start: null,\n        event_end: null\n      },\n      apis: {\n        alt_stripe_key: null,\n        stripe_webhook: null,\n        event_tag: null,\n        hubspot_list: null,\n        hubspot_key: null\n      },\n      venue: {\n        venue_name: null,\n        venue_address: null,\n        venue_city: null,\n        venue_country: null,\n        max_attendees: null\n      },\n      badges: {\n        badge_template: null,\n        ticket_price: null,\n        badge_x: null,\n        badge_y: null,\n        badge_x_p2: null,\n        badge_y_p2: null\n      }\n    };\n  },\n  methods: {\n    killMessage() {\n      this.announce = null;\n    },\n    async sendOptions(dataObj) {\n      const data = JSON.stringify(this[dataObj]);\n      const url = auth.optionsRoute;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: data\n      }).then(result => result.json()).then(result => {\n        this.announce = result;\n      });\n    }\n  },\n  mounted() {\n    const url = auth.AllOptionsRoute;\n    const headers = {\n      credentials: 'same-origin',\n      'Content-Type': 'application/json',\n      'X-WP-Nonce': this.nonce\n    };\n    fetch(url, {\n      method: 'GET',\n      headers\n    }).then(result => result.json()).then(result => {\n      Object.entries(result).forEach(([key]) => {\n        const reskey = result[key][0];\n        const resval = result[key][1];\n        if (this.globals[reskey] || this.globals[reskey] === null) {\n          this.globals[reskey] = resval;\n        }\n        if (this.apis[reskey] || this.apis[reskey] === null) {\n          this.apis[reskey] = resval;\n        }\n        if (this.venue[reskey] || this.venue[reskey] === null) {\n          this.venue[reskey] = resval;\n        }\n        if (this.badges[reskey] || this.badges[reskey] === null) {\n          this.badges[reskey] = resval;\n        }\n      });\n    });\n  }\n};","map":{"version":3,"mappings":"AA4GA;AACA;AAEA;EAEAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACA;MACA;MACA;MACA;QACAC;QACA;QACA;MACA;MACAC;QAAAC;QAAAC;QAAAC;MAAA,GACAC,8BACAA;QAAA;MAAA;IACA;EACA;EACAC;IACA;IACA;MACAN;MACA;MACA;IACA;IACAC;MAAAC;MAAAC;IAAA,GACAE,8BACAA;MACAE;QACA;QACA;QACA;UACA;QACA;QACA;UACA;QACA;QACA;UACA;QACA;QACA;UACA;QACA;MACA;IACA;EACA;AACA","names":["name","components","MessageAnnounce","data","menuItem","announce","globals","event_name","event_payoff","event_date","event_start","event_end","apis","alt_stripe_key","stripe_webhook","event_tag","hubspot_list","hubspot_key","venue","venue_name","venue_address","venue_city","venue_country","max_attendees","badges","badge_template","ticket_price","badge_x","badge_y","badge_x_p2","badge_y_p2","methods","killMessage","credentials","fetch","method","headers","body","then","mounted","Object"],"sourceRoot":"src/components","sources":["setup.vue"],"sourcesContent":["<template>\r\n  <div class=\"sub-section\">\r\n    <div class=\"side-column\">\r\n        <ul class=\"submenu\">\r\n            <li :class=\"{'active' : menuItem == 'globals'}\">\r\n                <button @click=\"menuItem = 'globals'\">Event globals</button>\r\n            </li>\r\n            <li :class=\"{'active' : menuItem == 'apis'}\">\r\n                <button @click=\"menuItem = 'apis'\">APIs</button>\r\n            </li>\r\n            <li :class=\"{'active' : menuItem == 'venue'}\">\r\n                <button @click=\"menuItem = 'venue'\">Venue details</button>\r\n            </li>\r\n            <li :class=\"{'active' : menuItem == 'tickets'}\">\r\n                <button @click=\"menuItem = 'tickets'\">Tickets & badge</button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <message-announce v-if=\"announce\" :message=\"announce\" @closeMessage=\"killMessage()\" />\r\n    <div v-show=\"menuItem == 'globals'\" class=\"main-column\">\r\n        <h3>Global setup</h3>\r\n        <form id=\"globals\" @submit.prevent=\"sendOptions('globals')\">\r\n            <label for=\"name\">Event name\r\n            <input type=\"text\" id=\"name\" v-model=\"globals.event_name\"/></label>\r\n            <label for=\"payoff\">Event payoff\r\n            <input type=\"text\" id=\"payoff\" v-model=\"globals.event_payoff\"/></label>\r\n            <label for=\"date\">Event date\r\n            <input type=\"date\" id=\"date\" v-model=\"globals.event_date\"/></label>\r\n            <div class=\"double\">\r\n                <label for=\"start\">Kick-off time\r\n                <input type=\"time\" id=\"start\" v-model=\"globals.event_start\"/></label>\r\n                <label for=\"end\">Event end time\r\n                <input type=\"time\" id=\"end\" v-model=\"globals.event_end\"/></label>\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"Save edits\"/>\r\n        </form>\r\n    </div>\r\n\r\n    <div v-show=\"menuItem == 'apis'\" class=\"main-column\">\r\n        <h3>APIs setup</h3>\r\n        <form id=\"apis\" @submit.prevent=\"sendOptions('apis')\">\r\n            <label for=\"stripe_key\">Stripe API key\r\n            <input type=\"text\" id=\"stripe_key\" v-model=\"apis.alt_stripe_key\"/></label>\r\n            <label for=\"webhook\">Stripe webhook key\r\n            <input type=\"text\" id=\"webhook\" v-model=\"apis.stripe_webhook\"/></label>\r\n            <label for=\"hubspot-api\">Hubspot API key\r\n            <input type=\"text\" id=\"hubspot-api\" v-model=\"apis.hubspot_key\"/></label>\r\n            <div class=\"double\">\r\n                <label for=\"hubspot-list\">Hubspot list ID\r\n                <input type=\"text\" id=\"hubspot-list\" v-model=\"apis.hubspot_list\"/></label>\r\n                <label for=\"tag\">Hubspot event tag (used in form to link to static list)\r\n                <input type=\"text\" id=\"tag\" v-model=\"apis.event_tag\"/></label>\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"Save edits\"/>\r\n        </form>\r\n    </div>\r\n\r\n    <div v-show=\"menuItem == 'venue'\" class=\"main-column\">\r\n        <h3>Venue setup</h3>\r\n        <form id=\"venue\" @submit.prevent=\"sendOptions('venue')\">\r\n            <label for=\"venue_name\">Name of venue\r\n            <input type=\"text\" id=\"venue_name\" v-model=\"venue.venue_name\"/></label>\r\n            <label for=\"venue_address\">Venue address\r\n            <input type=\"text\" id=\"venue_address\" v-model=\"venue.venue_address\"/></label>\r\n            <div class=\"double\">\r\n              <label for=\"venue_city\">Venue city\r\n              <input type=\"text\" id=\"venue_city\" v-model=\"venue.venue_city\"/></label>\r\n              <label for=\"venue_country\">Venue country\r\n              <input type=\"text\" id=\"venue_country\" v-model=\"venue.venue_country\"/></label>\r\n            </div>\r\n            <label for=\"venue_max\">Maximum attendees permitted\r\n            <input type=\"number\" id=\"venue_max\" v-model=\"venue.max_attendees\"/></label>\r\n\r\n            <input type=\"submit\" value=\"Save edits\"/>\r\n        </form>\r\n    </div>\r\n\r\n    <div v-show=\"menuItem == 'tickets'\" class=\"main-column\">\r\n        <h3>Tickets & badge setup</h3>\r\n        <form id=\"badge\" @submit.prevent=\"sendOptions('badges')\">\r\n            <label for=\"badge_template\">Badge template\r\n            <input type=\"file\" id=\"badge_template\"/></label>\r\n            <label for=\"ticket_price\">Ticket price\r\n            <input type=\"number\" id=\"ticket_price\" v-model=\"badges.ticket_price\"/></label>\r\n            <p>Text positioning badge page 1</p>\r\n            <div class=\"double\">\r\n              <label for=\"p1x\">X coordinate\r\n              <input type=\"number\" id=\"p1x\" v-model=\"badges.badge_x\"/></label>\r\n              <label for=\"p1y\">Y coordinate\r\n              <input type=\"number\" id=\"p1y\" v-model=\"badges.badge_y\"/></label>\r\n            </div>\r\n            <p>Text positioning badge page 2</p>\r\n            <div class=\"double\">\r\n              <label for=\"p2x\">X coordinate\r\n              <input type=\"number\" id=\"p2x\" v-model=\"badges.badge_x_p2\"/></label>\r\n              <label for=\"p2y\">Y coordinate\r\n              <input type=\"number\" id=\"p2y\" v-model=\"badges.badge_y_p2\"/></label>\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"Save edits\"/>\r\n        </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport auth from '@/assets/auth';\r\nimport MessageAnnounce from './MessageAnnounce.vue';\r\n\r\nexport default {\r\n\r\n  name: 'SetUp',\r\n  components: {\r\n    MessageAnnounce,\r\n  },\r\n  data() {\r\n    return {\r\n      menuItem: 'globals',\r\n      announce: null,\r\n      globals: {\r\n        event_name: 'xxxx',\r\n        event_payoff: 'ccccc',\r\n        event_date: null,\r\n        event_start: null,\r\n        event_end: null,\r\n      },\r\n      apis: {\r\n        alt_stripe_key: null,\r\n        stripe_webhook: null,\r\n        event_tag: null,\r\n        hubspot_list: null,\r\n        hubspot_key: null,\r\n      },\r\n      venue: {\r\n        venue_name: null,\r\n        venue_address: null,\r\n        venue_city: null,\r\n        venue_country: null,\r\n        max_attendees: null,\r\n      },\r\n      badges: {\r\n        badge_template: null,\r\n        ticket_price: null,\r\n        badge_x: null,\r\n        badge_y: null,\r\n        badge_x_p2: null,\r\n        badge_y_p2: null,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    killMessage() {\r\n      this.announce = null;\r\n    },\r\n    async sendOptions(dataObj) {\r\n      const data = JSON.stringify(this[dataObj]);\r\n      const url = auth.optionsRoute;\r\n      const headers = {\r\n        credentials: 'same-origin',\r\n        'Content-Type': 'application/json',\r\n        'X-WP-Nonce': this.nonce,\r\n      };\r\n      fetch(url, { method: 'POST', headers, body: data })\r\n        .then((result) => result.json())\r\n        .then((result) => { this.announce = result; });\r\n    },\r\n  },\r\n  mounted() {\r\n    const url = auth.AllOptionsRoute;\r\n    const headers = {\r\n      credentials: 'same-origin',\r\n      'Content-Type': 'application/json',\r\n      'X-WP-Nonce': this.nonce,\r\n    };\r\n    fetch(url, { method: 'GET', headers })\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        Object.entries(result).forEach(([key]) => {\r\n          const reskey = result[key][0];\r\n          const resval = result[key][1];\r\n          if (this.globals[reskey] || this.globals[reskey] === null) {\r\n            this.globals[reskey] = resval;\r\n          }\r\n          if (this.apis[reskey] || this.apis[reskey] === null) {\r\n            this.apis[reskey] = resval;\r\n          }\r\n          if (this.venue[reskey] || this.venue[reskey] === null) {\r\n            this.venue[reskey] = resval;\r\n          }\r\n          if (this.badges[reskey] || this.badges[reskey] === null) {\r\n            this.badges[reskey] = resval;\r\n          }\r\n        });\r\n      });\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}