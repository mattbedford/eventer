{"ast":null,"code":"import auth from '@/assets/auth';\nimport 'vue-good-table/dist/vue-good-table.css';\nimport { VueGoodTable } from 'vue-good-table';\nexport default {\n  name: 'SetUp',\n  components: {\n    VueGoodTable\n  },\n  data() {\n    return {\n      oneToEdit: null,\n      registrationsList: [],\n      columns: [{\n        label: 'Name',\n        field: this.concatName\n      }, {\n        label: 'Email',\n        field: 'email'\n      }, {\n        label: 'Company',\n        field: 'company'\n      }, {\n        label: 'Coupon',\n        field: 'coupon_code'\n      }, {\n        label: 'Paid',\n        field: this.paidAmount\n      }, {\n        label: 'Printed',\n        field: this.printedOrNot\n      }, {\n        label: 'Registered',\n        field: this.registrationDate\n      }, {\n        label: 'View/Edit',\n        field: 'edit'\n      }]\n    };\n  },\n  methods: {\n    async grabRegistrations() {\n      const url = auth.allRegistrations;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'GET',\n        headers\n      }).then(result => result.json()).then(result => {\n        this.registrationsList = result;\n      });\n    },\n    editButton(rowObj) {\n      const z = rowObj.id;\n      const x = `<button @click=\"editRegistrant(${z})\">View/Edit</button>`;\n      return x;\n    },\n    concatName(rowObj) {\n      return rowObj.name + ' ' + rowObj.surname;\n    },\n    paidAmount(rowObj) {\n      return 'CHF ' + rowObj.paid;\n    },\n    printedOrNot(rowObj) {\n      if (rowObj.printed === '0') {\n        return 'No';\n      }\n      return 'Yes';\n    },\n    editRegistrant(rowId) {\n      this.oneToEdit = this.registrationsList[rowId];\n    },\n    registrationDate(rowObj) {\n      const s = rowObj.sign_up_date;\n      return s.split('-').reverse().join('-');\n    }\n  },\n  mounted() {\n    this.grabRegistrations();\n  }\n};","map":{"version":3,"mappings":"AAgFA;AACA;AACA;AAEA;EAEAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC,UACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA;IAEA;EACA;EACAC;IACA;MACA;MACA;QACAC;QACA;QACA;MACA;MACAC;QAAAC;QAAAC;MAAA,GACAC,8BACAA;QAAA;MAAA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["name","components","VueGoodTable","data","oneToEdit","registrationsList","columns","label","field","methods","credentials","fetch","method","headers","then","editButton","concatName","paidAmount","printedOrNot","editRegistrant","registrationDate","mounted"],"sourceRoot":"src/components","sources":["RegistrationsList.vue"],"sourcesContent":["<template>\r\n  <div class=\"sub-section\">\r\n    <div class=\"registrations-table\">\r\n        <vue-good-table\r\n            :columns=\"columns\"\r\n            :rows=\"registrationsList\"\r\n            theme=\"black-rhino\"\r\n            :search-options=\"{\r\n              enabled: true\r\n            }\"\r\n            :pagination-options=\"{\r\n                enabled: true,\r\n                perPage: 50,\r\n                position: 'bottom',\r\n            }\">\r\n            <template slot=\"table-row\" slot-scope=\"props\">\r\n                <span v-if=\"props.column.field == 'edit'\">\r\n                    <button @click=\"editRegistrant(props.row.originalIndex)\">Edit</button>\r\n                </span>\r\n            </template>\r\n        </vue-good-table>\r\n    </div>\r\n    <div class=\"edit-shelf\" v-if=\"oneToEdit\" v-scroll-lock=\"oneToEdit\">\r\n      <h1>Edit registered user</h1>\r\n\r\n      <h2>User contacts</h2>\r\n      <form id=\"edit-registrant\">\r\n        <input type=\"hidden\" v-model=\"oneToEdit.id\">\r\n        <div class=\"double\">\r\n          <label for=\"fname\">First name\r\n            <input type=\"text\" id=\"fname\" v-model=\"oneToEdit.name\"/></label>\r\n\r\n          <label for=\"lname\">Last name\r\n            <input type=\"text\" id=\"lname\" v-model=\"oneToEdit.surname\"/></label>\r\n        </div>\r\n\r\n        <div class=\"double\"></div>\r\n          <label for=\"company\">Company\r\n            <input type=\"text\" id=\"company\" v-model=\"oneToEdit.company\"/></label>\r\n\r\n          <label for=\"website\">Website\r\n            <input type=\"url\" id=\"website\" v-model=\"oneToEdit.website\"/></label>\r\n        </div>\r\n\r\n        <label for=\"role\">Role\r\n            <input type=\"text\" id=\"role\" v-model=\"oneToEdit.role\"/></label>\r\n        \r\n        <label for=\"email\">Email address\r\n            <input type=\"email\" id=\"email\" v-model=\"oneToEdit.email\"/></label>\r\n          \r\n        <div>\r\n          <label for=\"mobile\">Mobile phone\r\n            <input type=\"text\" id=\"company\" v-model=\"oneToEdit.mobile_phone\"/></label>\r\n\r\n          <label for=\"office\">Office phone\r\n            <input type=\"text\" id=\"office\" v-model=\"oneToEdit.office_phone\"/></label>\r\n        </div>\r\n\r\n        <h2>Address</h2>\r\n        <label for=\"address\">Address\r\n          <input type=\"text\" id=\"address\" v-model=\"oneToEdit.street_address\"/></label>\r\n        <label for=\"city\">City\r\n          <input type=\"text\" id=\"city\" v-model=\"oneToEdit.city\"/></label>\r\n        <label for=\"country\">Country\r\n          <input type=\"text\" id=\"country\" v-model=\"oneToEdit.country\"/></label>\r\n\r\n        <h2>Sign-up details</h2>\r\n        <ul>\r\n          <li>Billed: CHF {{oneToEdit.paid}}</li>\r\n          <li>Payment status: {{oneToEdit.payment_status}}</li>\r\n          <li>Sign-up date: <span v-html=\"registrationDate(oneToEdit.sign_up_date)\"></span></li>\r\n          <li>User interests: {{oneToEdit.interests}}</li>\r\n        </ul>\r\n        \r\n        </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport auth from '@/assets/auth';\r\nimport 'vue-good-table/dist/vue-good-table.css';\r\nimport { VueGoodTable } from 'vue-good-table';\r\n\r\nexport default {\r\n\r\n  name: 'SetUp',\r\n  components: {\r\n    VueGoodTable,\r\n  },\r\n  data() {\r\n    return {\r\n      oneToEdit: null,\r\n      registrationsList: [],\r\n      columns: [\r\n        {\r\n          label: 'Name',\r\n          field: this.concatName,\r\n        },\r\n        {\r\n          label: 'Email',\r\n          field: 'email',\r\n        },\r\n        {\r\n          label: 'Company',\r\n          field: 'company',\r\n        },\r\n        {\r\n          label: 'Coupon',\r\n          field: 'coupon_code',\r\n        },\r\n        {\r\n          label: 'Paid',\r\n          field: this.paidAmount,\r\n        },\r\n        {\r\n          label: 'Printed',\r\n          field: this.printedOrNot,\r\n        },\r\n        {\r\n          label: 'Registered',\r\n          field: this.registrationDate,\r\n        },\r\n        {\r\n          label: 'View/Edit',\r\n          field: 'edit',\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    async grabRegistrations() {\r\n      const url = auth.allRegistrations;\r\n      const headers = {\r\n        credentials: 'same-origin',\r\n        'Content-Type': 'application/json',\r\n        'X-WP-Nonce': this.nonce,\r\n      };\r\n      fetch(url, { method: 'GET', headers })\r\n        .then((result) => result.json())\r\n        .then((result) => { this.registrationsList = result; });\r\n    },\r\n    editButton(rowObj) {\r\n      const z = rowObj.id;\r\n      const x = `<button @click=\"editRegistrant(${z})\">View/Edit</button>`;\r\n      return x;\r\n    },\r\n    concatName(rowObj) {\r\n      return rowObj.name + ' ' + rowObj.surname;\r\n    },\r\n    paidAmount(rowObj) {\r\n      return 'CHF ' + rowObj.paid;\r\n    },\r\n    printedOrNot(rowObj) {\r\n      if (rowObj.printed === '0') {\r\n        return 'No';\r\n      }\r\n      return 'Yes';\r\n    },\r\n    editRegistrant(rowId) {\r\n      this.oneToEdit = this.registrationsList[rowId];\r\n    },\r\n    registrationDate(rowObj) {\r\n      const s = rowObj.sign_up_date;\r\n      return s.split('-').reverse().join('-');\r\n    },\r\n  },\r\n  mounted() {\r\n    this.grabRegistrations();\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}