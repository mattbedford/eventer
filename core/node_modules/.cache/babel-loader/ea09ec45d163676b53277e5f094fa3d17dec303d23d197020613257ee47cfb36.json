{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport VueApexCharts from 'vue-apexcharts';\nimport auth from '@/assets/auth';\nexport default {\n  name: 'FrontDesk',\n  components: {\n    VueApexCharts\n  },\n  data() {\n    return {\n      allRegisteredPeople: null,\n      // First chart\n      series: [],\n      // [44, 55, 41, 17, 15],\n      chartOptions: {\n        chart: {\n          type: 'donut',\n          height: 500\n        },\n        theme: {\n          palette: 'palette3'\n        },\n        labels: [],\n        // 'brand', 'vendor', 'staff', 'etc'\n        legend: {\n          position: 'bottom'\n        }\n      },\n      // Second chart\n      series2: [{\n        name: 'Registered attendees',\n        data: [44]\n      }, {\n        name: 'Target',\n        data: [500]\n      }],\n      chartOptions2: {\n        chart: {\n          type: 'bar',\n          height: 500\n        },\n        theme: {\n          palette: 'palette3'\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '65%',\n            endingShape: 'rounded'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          width: 2,\n          colors: ['transparent']\n        },\n        xaxis: {\n          categories: ['Attendees']\n        },\n        yaxis: {\n          title: {\n            text: 'Attendees'\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        tooltip: {\n          y: {\n            formatter(val) {\n              return `${val} attendees`;\n            }\n          }\n        }\n      }\n    };\n  },\n  mounted() {},\n  methods: {\n    async getAttendeeData() {\n      this.registrationsList = [];\n      const url = auth.allRegistrations;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'GET',\n        headers\n      }).then(result => result.json()).then(result => {\n        this.allRegisteredPeople = result;\n      }).then(result => {\n        // create arrays of result.my_company_is, for display in a pie chart\n        const myCompanyIs = [];\n        const myCompanyIsLabels = [];\n        const myCompanyIsData = [];\n        this.allRegisteredPeople.forEach(item => {\n          myCompanyIs.push(item.my_company_is);\n        });\n        // remove duplicates\n        const myCompanyIsUnique = [...new Set(myCompanyIs)];\n        // count how many of each\n        myCompanyIsUnique.forEach(company => {\n          let count = 0;\n          myCompanyIs.forEach(item => {\n            if (item === company) {\n              count += 1;\n            }\n          });\n          myCompanyIsLabels.push(company);\n          myCompanyIsData.push(count);\n        });\n        // set the chart data\n        this.series = myCompanyIsData;\n        this.chartOptions.labels = myCompanyIsLabels;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAaA;AACA;AAEA;EAEAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACA;MACAC;MAAA;MACAC;QACAC;UACAC;UACAC;QACA;QACAC;UACAC;QACA;QACAC;QAAA;QACAC;UACAC;QACA;MACA;MACA;MACAC;QACAf;QACAG;MACA;QACAH;QACAG;MACA;MACAa;QACAT;UACAC;UACAC;QACA;QACAC;UACAC;QACA;QACAM;UACAC;YACAC;YACAC;YACAC;UACA;QACA;QACAC;UACAC;QACA;QACAC;UACAC;UACAC;UACAC;QACA;QACAC;UACAC;QACA;QACAC;UACAC;YACAC;UACA;QACA;QACAC;UACAC;QACA;QACAC;UACAC;YACAC;cACA;YACA;UACA;QACA;MACA;IACA;EACA;EACAC,WAEA;EACAC;IACA;MACA;MACA;MACA;QACAC;QACA;QACA;MACA;MACAC;QAAAC;QAAAC;MAAA,GACAC,8BACAA;QACA;MACA,GACAA;QACA;QACA;QACA;QACA;QACA;UACAC;QACA;QACA;QACA;QACA;QACAC;UACA;UACAD;YACA;cACAE;YACA;UACA;UACAC;UACAC;QACA;QACA;QACA;QACA;MAEA;IACA;EACA;AACA","names":["name","components","VueApexCharts","data","allRegisteredPeople","series","chartOptions","chart","type","height","theme","palette","labels","legend","position","series2","chartOptions2","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","colors","xaxis","categories","yaxis","title","text","fill","opacity","tooltip","y","formatter","mounted","methods","credentials","fetch","method","headers","then","myCompanyIs","myCompanyIsUnique","count","myCompanyIsLabels","myCompanyIsData"],"sourceRoot":"src/components","sources":["FrontDesk.vue"],"sourcesContent":["<template>\r\n    <div class=\"front-desk sub-section\">\r\n        <div class=\"chart-section\">\r\n            <h2>Attendee breakdown</h2>\r\n            <VueApexCharts :options=\"chartOptions\" :series=\"series\" />\r\n            <br>\r\n            <h2>Attendee total</h2>\r\n            <VueApexCharts :options=\"chartOptions2\" :series=\"series2\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport VueApexCharts from 'vue-apexcharts';\r\nimport auth from '@/assets/auth';\r\n\r\nexport default {\r\n\r\n  name: 'FrontDesk',\r\n  components: {\r\n    VueApexCharts,\r\n  },\r\n  data() {\r\n    return {\r\n      allRegisteredPeople: null,\r\n      // First chart\r\n      series: [], // [44, 55, 41, 17, 15],\r\n      chartOptions: {\r\n        chart: {\r\n          type: 'donut',\r\n          height: 500,\r\n        },\r\n        theme: {\r\n          palette: 'palette3',\r\n        },\r\n        labels: [], // 'brand', 'vendor', 'staff', 'etc'\r\n        legend: {\r\n          position: 'bottom',\r\n        },\r\n      },\r\n      // Second chart\r\n      series2: [{\r\n        name: 'Registered attendees',\r\n        data: [44],\r\n      }, {\r\n        name: 'Target',\r\n        data: [500],\r\n      }],\r\n      chartOptions2: {\r\n        chart: {\r\n          type: 'bar',\r\n          height: 500,\r\n        },\r\n        theme: {\r\n          palette: 'palette3',\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: false,\r\n            columnWidth: '65%',\r\n            endingShape: 'rounded',\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          width: 2,\r\n          colors: ['transparent'],\r\n        },\r\n        xaxis: {\r\n          categories: ['Attendees'],\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Attendees',\r\n          },\r\n        },\r\n        fill: {\r\n          opacity: 1,\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter(val) {\r\n              return `${val} attendees`;\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n\r\n  },\r\n  methods: {\r\n    async getAttendeeData() {\r\n      this.registrationsList = [];\r\n      const url = auth.allRegistrations;\r\n      const headers = {\r\n        credentials: 'same-origin',\r\n        'Content-Type': 'application/json',\r\n        'X-WP-Nonce': this.nonce,\r\n      };\r\n      fetch(url, { method: 'GET', headers })\r\n        .then((result) => result.json())\r\n        .then((result) => { \r\n          this.allRegisteredPeople = result; \r\n        })\r\n        .then((result) => {\r\n          // create arrays of result.my_company_is, for display in a pie chart\r\n          const myCompanyIs = [];\r\n          const myCompanyIsLabels = [];\r\n          const myCompanyIsData = [];\r\n          this.allRegisteredPeople.forEach((item) => {\r\n            myCompanyIs.push(item.my_company_is);\r\n          });\r\n          // remove duplicates\r\n          const myCompanyIsUnique = [...new Set(myCompanyIs)];\r\n          // count how many of each\r\n          myCompanyIsUnique.forEach((company) => {\r\n            let count = 0;\r\n            myCompanyIs.forEach((item) => {\r\n              if (item === company) {\r\n                count += 1;\r\n              }\r\n            });\r\n            myCompanyIsLabels.push(company);\r\n            myCompanyIsData.push(count);\r\n          });\r\n          // set the chart data\r\n          this.series = myCompanyIsData;\r\n          this.chartOptions.labels = myCompanyIsLabels;\r\n\r\n        })\r\n    }\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}