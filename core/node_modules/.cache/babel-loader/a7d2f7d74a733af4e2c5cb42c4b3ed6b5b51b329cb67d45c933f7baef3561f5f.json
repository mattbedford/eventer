{"ast":null,"code":"import auth from '@/assets/auth';\nimport 'vue-good-table/dist/vue-good-table.css';\nimport { VueGoodTable } from 'vue-good-table';\nimport MessageAnnounce from './MessageAnnounce.vue';\nexport default {\n  name: 'RegistrationsList',\n  components: {\n    VueGoodTable,\n    MessageAnnounce\n  },\n  data() {\n    return {\n      oneToEdit: null,\n      announce: null,\n      registrationsList: [],\n      columns: [{\n        label: 'Name',\n        field: this.concatName\n      }, {\n        label: 'Email',\n        field: 'email'\n      }, {\n        label: 'Company',\n        field: 'company'\n      }, {\n        label: 'Company type',\n        field: 'my_company_is'\n      }, {\n        label: 'Coupon',\n        field: 'coupon_code'\n      }, {\n        label: 'Status',\n        field: this.paidAmount\n      }, {\n        label: 'Printed',\n        field: this.printedOrNot\n      }, {\n        label: 'Registered',\n        field: this.registrationDate\n      }, {\n        label: 'View/Edit',\n        field: 'edit'\n      }]\n    };\n  },\n  methods: {\n    async grabRegistrations() {\n      this.registrationsList = [];\n      const url = auth.allRegistrations;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'GET',\n        headers\n      }).then(result => result.json()).then(result => {\n        this.registrationsList = result;\n      });\n    },\n    async editRegistration(cmd) {\n      if (!this.oneToEdit.name || !this.oneToEdit.surname || !this.oneToEdit.email || !this.oneToEdit.company || !this.oneToEdit.office_phone) {\n        this.announce = ['Hold it right there...', 'You need to supply all required fields (name, surname, company, email and office phone)'];\n        return;\n      }\n      this.oneToEdit.command = cmd;\n      const data = JSON.stringify(this.oneToEdit);\n      const url = auth.editRegistrations;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: data\n      }).then(this.oneToEdit = null).then(result => result.json()).then(result => {\n        this.announce = result;\n      });\n    },\n    editButton(rowObj) {\n      let html = '';\n      const syncStatus = this.syncHsCheck(rowObj);\n      switch (syncStatus) {\n        case 'suspicious':\n          html = '<svg class=\"suspicious\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M85.57 446.25h340.86a32 32 0 0 0 28.17-47.17L284.18 82.58c-12.09-22.44-44.27-22.44-56.36 0L57.4 399.08a32 32 0 0 0 28.17 47.17z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m250.26 195.39 5.74 122 5.73-121.95a5.74 5.74 0 0 0-5.79-6h0a5.74 5.74 0 0 0-5.68 5.95z\"/><path d=\"M256 397.25a20 20 0 1 1 20-20 20 20 0 0 1-20 20z\"/></svg>';\n          break;\n        case 'ok':\n          html = '<svg class=\"all-ok\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M352 176 217.6 336 160 272\"/></svg>';\n          break;\n        case 'sync-me':\n          html = '<svg class=\"sync-me\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M434.67 285.59v-29.8c0-98.73-80.24-178.79-179.2-178.79a179 179 0 0 0-140.14 67.36m-38.53 82v29.8C76.8 355 157 435 256 435a180.45 180.45 0 0 0 140-66.92\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m32 256 44-44 46 44m358 0-44 44-46-44\"/></svg>';\n          break;\n        default:\n          html = '<svg class=\"all-ok\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M352 176 217.6 336 160 272\"/></svg></button>';\n      }\n      return html;\n    },\n    syncHsCheck(rowObj) {\n      const suspicious = this.checkSuspiciousFields(rowObj);\n      if (rowObj.hs_synched === '0' && suspicious === true) {\n        return 'suspicious';\n      }\n      if (rowObj.hs_synched === '0') {\n        return 'sync-me';\n      }\n      if (rowObj.hs_synched !== '0') {\n        return 'ok';\n      }\n      return 'ok';\n    },\n    async syncWithHubspot(rowId) {\n      let target = null;\n      if (this.oneToEdit == null) {\n        target = this.registrationsList[rowId];\n      } else {\n        target = this.oneToEdit;\n      }\n      if (!target.name || !target.surname || !target.email || !target.company || !target.office_phone) {\n        this.announce = ['Hold it right there...', 'You need to supply all required fields (name, surname, company, email and office phone)'];\n        return;\n      }\n      this.oneToEdit = null;\n      const data = JSON.stringify(target);\n      const url = auth.hubspotSync;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: data\n      }).then(result => result.json()).then(result => {\n        this.announce = result;\n      });\n    },\n    concatName(rowObj) {\n      return rowObj.name + ' ' + rowObj.surname;\n    },\n    paidAmount(rowObj) {\n      const stat = rowObj.payment_status;\n      if (stat === 'Pending') {\n        return 'Abandoned cart';\n      }\n      return rowObj.payment_status;\n    },\n    printedOrNot(rowObj) {\n      if (rowObj.printed === '0') {\n        return 'No';\n      }\n      return 'Yes';\n    },\n    editRegistrant(rowId) {\n      this.oneToEdit = this.registrationsList[rowId];\n    },\n    sortLikes(rowObj) {\n      if (!rowObj.interests) return '';\n      return rowObj.interests.replaceAll(',', ', ');\n    },\n    registrationDate(rowObj) {\n      if (!rowObj.sign_up_date) return '';\n      const s = rowObj.sign_up_date;\n      return s.split('-').reverse().join('-');\n    },\n    killMessage() {\n      this.grabRegistrations();\n      this.announce = null;\n    },\n    createRegistrant() {\n      this.oneToEdit = {};\n    },\n    rowStyleClassFn(row) {\n      return row.payment_status === 'Pending' ? 'abandoned' : 'normal';\n    },\n    checkSuspiciousFields(rowObj) {\n      let score = 0;\n      // eslint-disable-next-line\n      let company = rowObj.company;\n      // eslint-disable-next-line\n      const email = rowObj.email;\n      if (email.indexOf('@') === -1) {\n        return true;\n      }\n      const domain = email.split('@')[1];\n      if (company.indexOf(' ') !== -1) {\n        company = rowObj.company.split(' ')[0].toLowerCase();\n        if (company.length < 3) {\n          company = rowObj.company.split(' ')[1].toLowerCase();\n        }\n      }\n      if (email.indexOf(rowObj.name.toLowerCase()) !== -1) {\n        // eslint-disable-next-line\n        score++;\n      }\n      if (email.indexOf(rowObj.surname.toLowerCase()) !== -1) {\n        // eslint-disable-next-line\n        score++;\n      }\n      if (domain.indexOf(company.toLowerCase()) !== -1) {\n        // eslint-disable-next-line\n        score++;\n      }\n      if (rowObj.website.indexOf(domain) !== -1) {\n        // eslint-disable-next-line\n        score++;\n      }\n      if (score < 2) {\n        return true;\n      }\n      return false;\n    }\n  },\n  mounted() {\n    this.grabRegistrations();\n  }\n};","map":{"version":3,"mappings":"AAoLA;AACA;AACA;AACA;AAEA;EAEAA;EACAC;IACAC;IAAAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC,UACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA;IAEA;EACA;EACAC;IACA;MACA;MACA;MACA;QACAC;QACA;QACA;MACA;MACAC;QAAAC;QAAAC;MAAA,GACAC,8BACAA;QAAA;MAAA;IACA;IACA;MACA,gFACA;QACA;QACA;MACA;MAEA;MACA;MACA;MACA;QACAJ;QACA;QACA;MACA;MACAC;QAAAC;QAAAC;QAAAE;MAAA,GACAD,4BACAA,8BACAA;QAAA;MAAA;IACA;IACAE;MACA;MACA;MAEA;QACA;UACAC;UACA;QACA;UACAA;UACA;QACA;UACAA;UACA;QACA;UACAA;MAAA;MAEA;IACA;IACAC;MACA;MACA;QACA;MACA;MACA;QACA;MACA;MACA;QACA;MACA;MACA;IACA;IACA;MACA;MACA;QACAC;MACA;QACAA;MACA;MACA,wDACA;QACA;QACA;MACA;MACA;MACA;MACA;MACA;QACAT;QACA;QACA;MACA;MACAC;QAAAC;QAAAC;QAAAE;MAAA,GACAD,8BACAA;QAAA;MAAA;IACA;IACAM;MACA;IACA;IACAC;MACA;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;QACA;MACA;MACA;MAEA;QACAC;QACA;UACAA;QACA;MACA;MACA;QACA;QACAC;MACA;MACA;QACA;QACAA;MACA;MACA;QACA;QACAA;MACA;MACA;QACA;QACAA;MACA;MAEA;QACA;MACA;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["name","components","VueGoodTable","MessageAnnounce","data","oneToEdit","announce","registrationsList","columns","label","field","methods","credentials","fetch","method","headers","then","body","editButton","html","syncHsCheck","target","concatName","paidAmount","printedOrNot","editRegistrant","sortLikes","registrationDate","killMessage","createRegistrant","rowStyleClassFn","checkSuspiciousFields","company","score","mounted"],"sourceRoot":"src/components","sources":["RegistrationsList.vue"],"sourcesContent":["<template>\r\n  <div class=\"sub-section\">\r\n    <message-announce v-if=\"announce\" :message=\"announce\" @closeMessage=\"killMessage()\" />\r\n    <div class=\"registrations-table\">\r\n        <vue-good-table\r\n            :columns=\"columns\"\r\n            :rows=\"registrationsList\"\r\n            :row-style-class=\"rowStyleClassFn\"\r\n            theme=\"black-rhino\"\r\n            :search-options=\"{\r\n              enabled: true\r\n            }\"\r\n            :pagination-options=\"{\r\n                enabled: true,\r\n                perPage: 50,\r\n                position: 'bottom',\r\n            }\">\r\n            <div slot=\"table-actions\">\r\n              <button class=\"create-new-registrant\" @click=\"createRegistrant()\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path d=\"M256 48C141.31 48 48 141.31 48 256s93.31 208 208 208 208-93.31 208-208S370.69 48 256 48zm80 224h-64v64a16 16 0 0 1-32 0v-64h-64a16 16 0 0 1 0-32h64v-64a16 16 0 0 1 32 0v64h64a16 16 0 0 1 0 32z\"/></svg>\r\n              </button>\r\n            </div>\r\n            <template slot=\"table-row\" slot-scope=\"props\">\r\n              <div v-if=\"props.column.field == 'edit'\">\r\n                <button @click=\"editRegistrant(props.row.originalIndex)\">View/Edit</button>\r\n                <button class='sync-state'\r\n                  @click=\"syncWithHubspot(props.row.originalIndex)\"\r\n                  v-html=\"editButton(props.row)\">\r\n                </button>\r\n              </div>\r\n           </template>\r\n        </vue-good-table>\r\n        <div class=\"sync-all-section\">\r\n          <h3>\r\n            <svg class=\"sync-me\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M434.67 285.59v-29.8c0-98.73-80.24-178.79-179.2-178.79a179 179 0 0 0-140.14 67.36m-38.53 82v29.8C76.8 355 157 435 256 435a180.45 180.45 0 0 0 140-66.92\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m32 256 44-44 46 44m358 0-44 44-46-44\"/></svg>\r\n            Sync all data with Hubspot</h3>\r\n            <p v-if=\"{registrationsList.filter(hs_synched === '0').length > 0}\">\r\n              You have more than 0 unsynched contacts\r\n            </p>\r\n          <button>Hit me up</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"edit-shelf\" v-if=\"(oneToEdit !== null)\" v-scroll-lock=\"oneToEdit\">\r\n      <div class=\"content-wrap\">\r\n        <span class=\"options-title\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path d=\"M459.94 53.25a16.06 16.06 0 0 0-23.22-.56L424.35 65a8 8 0 0 0 0 11.31l11.34 11.32a8 8 0 0 0 11.34 0l12.06-12c6.1-6.09 6.67-16.01.85-22.38zM399.34 90 218.82 270.2a9 9 0 0 0-2.31 3.93L208.16 299a3.91 3.91 0 0 0 4.86 4.86l24.85-8.35a9 9 0 0 0 3.93-2.31L422 112.66a9 9 0 0 0 0-12.66l-9.95-10a9 9 0 0 0-12.71 0z\"/><path d=\"M386.34 193.66 264.45 315.79A41.08 41.08 0 0 1 247.58 326l-25.9 8.67a35.92 35.92 0 0 1-44.33-44.33l8.67-25.9a41.08 41.08 0 0 1 10.19-16.87l122.13-121.91a8 8 0 0 0-5.65-13.66H104a56 56 0 0 0-56 56v240a56 56 0 0 0 56 56h240a56 56 0 0 0 56-56V199.31a8 8 0 0 0-13.66-5.65z\"/></svg>\r\n          <h2 v-if=\"oneToEdit.payment_status != 'Pending'\">Edit registration</h2>\r\n          <h2 v-else>View non-registered contact</h2>\r\n        </span>\r\n        <span class=\"sync-status-notice suspicious\"\r\n          v-if=\"oneToEdit.id && checkSuspiciousFields(oneToEdit)\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M85.57 446.25h340.86a32 32 0 0 0 28.17-47.17L284.18 82.58c-12.09-22.44-44.27-22.44-56.36 0L57.4 399.08a32 32 0 0 0 28.17 47.17z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m250.26 195.39 5.74 122 5.73-121.95a5.74 5.74 0 0 0-5.79-6h0a5.74 5.74 0 0 0-5.68 5.95z\"/><path d=\"M256 397.25a20 20 0 1 1 20-20 20 20 0 0 1-20 20z\"/></svg>\r\n          <span>\r\n            This data does not look right. please check company, email, website and name fields.\r\n          </span>\r\n        </span>\r\n        <span class=\"sync-status-notice to-sync\"\r\n          v-else-if=\"oneToEdit.id && oneToEdit.hs_synched !== '1'\"\r\n        >\r\n          <svg class=\"sync-me\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M434.67 285.59v-29.8c0-98.73-80.24-178.79-179.2-178.79a179 179 0 0 0-140.14 67.36m-38.53 82v29.8C76.8 355 157 435 256 435a180.45 180.45 0 0 0 140-66.92\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m32 256 44-44 46 44m358 0-44 44-46-44\"/></svg>\r\n          <span>\r\n            Not yet synched with Hubspot.\r\n          </span>\r\n        </span>\r\n\r\n        <button class=\"close-button\" @click=\"(oneToEdit = null)\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M320 320 192 192m0 128 128-128\"/></svg>\r\n        </button>\r\n        <form id=\"edit-registrant\">\r\n\r\n          <h2>User contacts</h2>\r\n          <input type=\"hidden\" v-model=\"oneToEdit.id\">\r\n          <div class=\"double\">\r\n            <label for=\"fname\">First name (Required)\r\n              <input type=\"text\" id=\"fname\" v-model=\"oneToEdit.name\"/></label>\r\n\r\n            <label for=\"lname\">Last name (Required)\r\n              <input type=\"text\" id=\"lname\" v-model=\"oneToEdit.surname\"/></label>\r\n          </div>\r\n\r\n          <div class=\"double\">\r\n            <label for=\"company\">Company (Required)\r\n              <input type=\"text\" id=\"company\" v-model=\"oneToEdit.company\"/></label>\r\n\r\n            <label for=\"website\">Website\r\n              <input type=\"url\" id=\"website\" v-model=\"oneToEdit.website\"/></label>\r\n          </div>\r\n\r\n          <div class=\"company_type_wrapper\">\r\n                <p>Company type</p>\r\n                <select name=\"company_type\" id=\"company_type\" v-model=\"oneToEdit.my_company_is\">\r\n                    <option value=\"Brand, Retailer, Manufacturer or Online Shop\">\r\n                      Brand, Retailer, Manufacturer or Online Shop</option>\r\n                    <option value=\"Investor, Family Office,\">\r\n                      Investor, Family Office, Business Angel</option>\r\n                    <option value=\"Media &amp; Press\">\r\n                      Media / Press / Journalism</option>\r\n                    <option value=\"Public Administration / Institution\">\r\n                      Public Administration / Institution</option>\r\n                    <option value=\"Research Institute, University, School\">\r\n                      Research Institute, University, School</option>\r\n                    <option value=\"Vendor / Supplier of Services\">\r\n                      Vendor / Supplier of Services for Innovation and e-Commerce</option>\r\n                    <option value=\"Other\">Other</option>\r\n                </select>\r\n            </div>\r\n\r\n          <label for=\"role\">Role\r\n              <input type=\"text\" id=\"role\" v-model=\"oneToEdit.role\"/></label>\r\n\r\n          <label for=\"email\">Email address (Required)\r\n              <input type=\"email\" id=\"email\" v-model=\"oneToEdit.email\"/></label>\r\n\r\n          <div>\r\n            <label for=\"mobile\">Mobile phone\r\n              <input type=\"text\" id=\"company\" v-model=\"oneToEdit.mobile_phone\"/></label>\r\n\r\n            <label for=\"office\">Office phone (Required)\r\n              <input type=\"text\" id=\"office\" v-model=\"oneToEdit.office_phone\"/></label>\r\n          </div>\r\n\r\n          <h2>Address</h2>\r\n          <label for=\"address\">Address\r\n            <input type=\"text\" id=\"address\" v-model=\"oneToEdit.street_address\"/></label>\r\n          <label for=\"city\">City\r\n            <input type=\"text\" id=\"city\" v-model=\"oneToEdit.city\"/></label>\r\n          <label for=\"country\">Country\r\n            <input type=\"text\" id=\"country\" v-model=\"oneToEdit.country\"/></label>\r\n\r\n          <h2>Sign-up details</h2>\r\n          <ul v-if=\"oneToEdit.id\">\r\n            <li>Coupon: <strong>{{oneToEdit.coupon_code}}</strong></li>\r\n            <li>Billed: <strong>CHF {{oneToEdit.paid}}</strong>\r\n              <span v-if=\"oneToEdit.payment_status == 'Pending'\">\r\n                - contact will not be registered to event until payment</span>\r\n            </li>\r\n            <li :class=\"{pending : oneToEdit.payment_status == 'Pending'}\">\r\n              Payment status: <strong>{{oneToEdit.payment_status}}</strong>\r\n            </li>\r\n            <li>Sign-up date: <strong><span v-html=\"registrationDate(oneToEdit)\">\r\n            </span></strong></li>\r\n            <li>User interests: <strong><span v-html=\"sortLikes(oneToEdit)\">\r\n            </span></strong></li>\r\n          </ul>\r\n\r\n          <div class=\"double\">\r\n            <button v-if=\"oneToEdit.id\"\r\n              class=\"save-edits form-button\"\r\n              type=\"button\" @click=\"editRegistration('edit')\">\r\n              Save edits\r\n            </button>\r\n            <button v-else\r\n              class=\"save-edits form-button\"\r\n              type=\"button\" @click=\"editRegistration('create')\">\r\n              Add registration\r\n            </button>\r\n            <button\r\n              v-if=\"oneToEdit.id && oneToEdit.hs_synched !== '1'\"\r\n              type=\"button\"\r\n              class=\"form-button hubspot-sync\"\r\n              @click=\"syncWithHubspot(oneToEdit.id)\"\r\n            >\r\n              Sync with Hubspot\r\n            </button>\r\n            <button\r\n              v-if=\"oneToEdit.id\"\r\n              class=\"delete-registration form-button\"\r\n              type=\"button\"\r\n              @click=\"editRegistration('delete')\">\r\n              Delete registration\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport auth from '@/assets/auth';\r\nimport 'vue-good-table/dist/vue-good-table.css';\r\nimport { VueGoodTable } from 'vue-good-table';\r\nimport MessageAnnounce from './MessageAnnounce.vue';\r\n\r\nexport default {\r\n\r\n  name: 'RegistrationsList',\r\n  components: {\r\n    VueGoodTable, MessageAnnounce,\r\n  },\r\n  data() {\r\n    return {\r\n      oneToEdit: null,\r\n      announce: null,\r\n      registrationsList: [],\r\n      columns: [\r\n        {\r\n          label: 'Name',\r\n          field: this.concatName,\r\n        },\r\n        {\r\n          label: 'Email',\r\n          field: 'email',\r\n        },\r\n        {\r\n          label: 'Company',\r\n          field: 'company',\r\n        },\r\n        {\r\n          label: 'Company type',\r\n          field: 'my_company_is',\r\n        },\r\n        {\r\n          label: 'Coupon',\r\n          field: 'coupon_code',\r\n        },\r\n        {\r\n          label: 'Status',\r\n          field: this.paidAmount,\r\n        },\r\n        {\r\n          label: 'Printed',\r\n          field: this.printedOrNot,\r\n        },\r\n        {\r\n          label: 'Registered',\r\n          field: this.registrationDate,\r\n        },\r\n        {\r\n          label: 'View/Edit',\r\n          field: 'edit',\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    async grabRegistrations() {\r\n      this.registrationsList = [];\r\n      const url = auth.allRegistrations;\r\n      const headers = {\r\n        credentials: 'same-origin',\r\n        'Content-Type': 'application/json',\r\n        'X-WP-Nonce': this.nonce,\r\n      };\r\n      fetch(url, { method: 'GET', headers })\r\n        .then((result) => result.json())\r\n        .then((result) => { this.registrationsList = result; });\r\n    },\r\n    async editRegistration(cmd) {\r\n      if (!this.oneToEdit.name || !this.oneToEdit.surname || !this.oneToEdit.email\r\n      || !this.oneToEdit.company || !this.oneToEdit.office_phone) {\r\n        this.announce = ['Hold it right there...', 'You need to supply all required fields (name, surname, company, email and office phone)'];\r\n        return;\r\n      }\r\n\r\n      this.oneToEdit.command = cmd;\r\n      const data = JSON.stringify(this.oneToEdit);\r\n      const url = auth.editRegistrations;\r\n      const headers = {\r\n        credentials: 'same-origin',\r\n        'Content-Type': 'application/json',\r\n        'X-WP-Nonce': this.nonce,\r\n      };\r\n      fetch(url, { method: 'POST', headers, body: data })\r\n        .then(this.oneToEdit = null)\r\n        .then((result) => result.json())\r\n        .then((result) => { this.announce = result; });\r\n    },\r\n    editButton(rowObj) {\r\n      let html = '';\r\n      const syncStatus = this.syncHsCheck(rowObj);\r\n\r\n      switch (syncStatus) {\r\n        case 'suspicious':\r\n          html = '<svg class=\"suspicious\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M85.57 446.25h340.86a32 32 0 0 0 28.17-47.17L284.18 82.58c-12.09-22.44-44.27-22.44-56.36 0L57.4 399.08a32 32 0 0 0 28.17 47.17z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m250.26 195.39 5.74 122 5.73-121.95a5.74 5.74 0 0 0-5.79-6h0a5.74 5.74 0 0 0-5.68 5.95z\"/><path d=\"M256 397.25a20 20 0 1 1 20-20 20 20 0 0 1-20 20z\"/></svg>';\r\n          break;\r\n        case 'ok':\r\n          html = '<svg class=\"all-ok\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M352 176 217.6 336 160 272\"/></svg>';\r\n          break;\r\n        case 'sync-me':\r\n          html = '<svg class=\"sync-me\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M434.67 285.59v-29.8c0-98.73-80.24-178.79-179.2-178.79a179 179 0 0 0-140.14 67.36m-38.53 82v29.8C76.8 355 157 435 256 435a180.45 180.45 0 0 0 140-66.92\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m32 256 44-44 46 44m358 0-44 44-46-44\"/></svg>';\r\n          break;\r\n        default:\r\n          html = '<svg class=\"all-ok\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M352 176 217.6 336 160 272\"/></svg></button>';\r\n      }\r\n      return html;\r\n    },\r\n    syncHsCheck(rowObj) {\r\n      const suspicious = this.checkSuspiciousFields(rowObj);\r\n      if (rowObj.hs_synched === '0' && suspicious === true) {\r\n        return 'suspicious';\r\n      }\r\n      if (rowObj.hs_synched === '0') {\r\n        return 'sync-me';\r\n      }\r\n      if (rowObj.hs_synched !== '0') {\r\n        return 'ok';\r\n      }\r\n      return 'ok';\r\n    },\r\n    async syncWithHubspot(rowId) {\r\n      let target = null;\r\n      if (this.oneToEdit == null) {\r\n        target = this.registrationsList[rowId];\r\n      } else {\r\n        target = this.oneToEdit;\r\n      }\r\n      if (!target.name || !target.surname || !target.email\r\n      || !target.company || !target.office_phone) {\r\n        this.announce = ['Hold it right there...', 'You need to supply all required fields (name, surname, company, email and office phone)'];\r\n        return;\r\n      }\r\n      this.oneToEdit = null;\r\n      const data = JSON.stringify(target);\r\n      const url = auth.hubspotSync;\r\n      const headers = {\r\n        credentials: 'same-origin',\r\n        'Content-Type': 'application/json',\r\n        'X-WP-Nonce': this.nonce,\r\n      };\r\n      fetch(url, { method: 'POST', headers, body: data })\r\n        .then((result) => result.json())\r\n        .then((result) => { this.announce = result; });\r\n    },\r\n    concatName(rowObj) {\r\n      return rowObj.name + ' ' + rowObj.surname;\r\n    },\r\n    paidAmount(rowObj) {\r\n      const stat = (rowObj.payment_status);\r\n      if (stat === 'Pending') {\r\n        return 'Abandoned cart';\r\n      }\r\n      return rowObj.payment_status;\r\n    },\r\n    printedOrNot(rowObj) {\r\n      if (rowObj.printed === '0') {\r\n        return 'No';\r\n      }\r\n      return 'Yes';\r\n    },\r\n    editRegistrant(rowId) {\r\n      this.oneToEdit = this.registrationsList[rowId];\r\n    },\r\n    sortLikes(rowObj) {\r\n      if (!rowObj.interests) return '';\r\n      return rowObj.interests.replaceAll(',', ', ');\r\n    },\r\n    registrationDate(rowObj) {\r\n      if (!rowObj.sign_up_date) return '';\r\n      const s = rowObj.sign_up_date;\r\n      return s.split('-').reverse().join('-');\r\n    },\r\n    killMessage() {\r\n      this.grabRegistrations();\r\n      this.announce = null;\r\n    },\r\n    createRegistrant() {\r\n      this.oneToEdit = {};\r\n    },\r\n    rowStyleClassFn(row) {\r\n      return row.payment_status === 'Pending' ? 'abandoned' : 'normal';\r\n    },\r\n    checkSuspiciousFields(rowObj) {\r\n      let score = 0;\r\n      // eslint-disable-next-line\r\n      let company = rowObj.company;\r\n      // eslint-disable-next-line\r\n      const email = rowObj.email;\r\n      if (email.indexOf('@') === -1) {\r\n        return true;\r\n      }\r\n      const domain = email.split('@')[1];\r\n\r\n      if (company.indexOf(' ') !== -1) {\r\n        company = rowObj.company.split(' ')[0].toLowerCase();\r\n        if (company.length < 3) {\r\n          company = rowObj.company.split(' ')[1].toLowerCase();\r\n        }\r\n      }\r\n      if (email.indexOf(rowObj.name.toLowerCase()) !== -1) {\r\n        // eslint-disable-next-line\r\n        score++;\r\n      }\r\n      if (email.indexOf(rowObj.surname.toLowerCase()) !== -1) {\r\n        // eslint-disable-next-line\r\n        score++;\r\n      }\r\n      if (domain.indexOf(company.toLowerCase()) !== -1) {\r\n        // eslint-disable-next-line\r\n        score++;\r\n      }\r\n      if (rowObj.website.indexOf(domain) !== -1) {\r\n        // eslint-disable-next-line\r\n        score++;\r\n      }\r\n\r\n      if (score < 2) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.grabRegistrations();\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}