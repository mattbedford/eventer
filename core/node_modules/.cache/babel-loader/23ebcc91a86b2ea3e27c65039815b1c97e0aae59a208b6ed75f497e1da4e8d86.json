{"ast":null,"code":"/* eslint-disable */\nimport auth from '@/assets/auth';\nimport MessageAnnounce from './MessageAnnounce.vue';\nimport 'vue-good-table/dist/vue-good-table.css';\nimport { VueGoodTable } from 'vue-good-table';\nexport default {\n  components: {\n    VueGoodTable,\n    MessageAnnounce\n  },\n  data() {\n    return {\n      announce: null,\n      sorts: {\n        direction: 'desc',\n        column: null\n      },\n      registrationsDesk: [],\n      filter: '',\n      ready: false,\n      newreg: {\n        name: '',\n        surname: '',\n        company: '',\n        my_company_is: '',\n        role: '',\n        email: '',\n        office: ''\n      },\n      columns: [{\n        label: 'Name',\n        field: 'name'\n      }, {\n        label: 'Surname',\n        field: 'surname'\n      }, {\n        label: 'Company',\n        field: 'company'\n      }, {\n        label: 'Badge link',\n        field: this.checkPrintStatus,\n        html: true\n      }, {\n        label: 'Checked in',\n        field: checked_in,\n        html: true\n      }]\n    };\n  },\n  mounted() {\n    this.grabAllRegistrations();\n  },\n  methods: {\n    isCheckedIn(rowObj) {\n      return rowObj.checked_in;\n    },\n    checkPrintStatus(rowObj) {\n      if (rowObj.badge_link && rowObj.printed === '1') {\n        return `<a href='${rowObj.badge_link}' target='_blank'>View</a>`;\n      }\n      if (!rowObj.badge_link && rowObj.printed === '1') {\n        return `See <a href='${document.location.origin}/wp-content/plugins/eventer/badges/all_badges.zip' target='_blank'>zip folder</a> of all badges`;\n      }\n      return 'Not printed yet';\n    },\n    async updateAttendance(id, cmd) {\n      const url = '/wp-json/core-vue/do_my_check_in';\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      const data = JSON.stringify({\n        id,\n        cmd\n      });\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: data\n      }).then(result => result.json()).then(result => {\n        this.announce = result;\n        if (this.announce[0] !== 'Success') {\n          this.announce = ['Something went wrong', 'Please try again'];\n        }\n      });\n    },\n    async grabAllRegistrations() {\n      this.registrationsList = [];\n      const url = auth.allRegistrations;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'GET',\n        headers\n      }).then(result => result.json()).then(result => {\n        this.registrationsDesk = result.reverse();\n      });\n    },\n    async adHocRegistration() {\n      if (!this.newreg.name || !this.newreg.surname || !this.newreg.email || !this.newreg.company || !this.newreg.office) {\n        this.announce = ['Hold it right there...', 'You need to supply all required fields (name, surname, company, email, role and phone)'];\n        return;\n      }\n      this.ready = false;\n      const data = JSON.stringify(this.newreg);\n      const url = auth.adHocRegistration;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: data\n      }).then(this.oneToEdit = null).then(result => result.json()).then(result => {\n        this.announce = result;\n        if (this.announce[0] === 'Success') {\n          this.resetForm();\n        }\n      });\n    },\n    killMessage() {\n      this.grabAllRegistrations();\n      this.announce = null;\n    },\n    resetForm() {\n      this.newreg = {\n        name: '',\n        surname: '',\n        company: '',\n        my_company_is: '',\n        role: '',\n        email: ''\n      };\n      this.ready = false;\n    },\n    async printBadge(id) {\n      const url = auth.printBadge;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      const data = JSON.stringify({\n        ids: id\n      });\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: data\n      }).then(result => result.json()).then(result => {\n        this.announce = result;\n        if (this.announce[0] === 'Success') {\n          this.grabAllRegistrations();\n        }\n      });\n    }\n  },\n  watch: {\n    newreg: {\n      handler() {\n        if (this.newreg.name && this.newreg.surname && this.newreg.email && this.newreg.company) {\n          this.ready = true;\n        } else {\n          this.ready = false;\n        }\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"mappings":"AAoFA;AACA;AACA;AACA;AACA;AAEA;EAEAA;IACAC;IAAAC;EACA;EACAC;IACA;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC,UACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA;IAEA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QACA;MACA;MACA;QACA;MACA;MACA;IACA;IACA;MACA;MACA;QACAC;QACA;QACA;MACA;MACA;QAAAC;QAAAC;MAAA;MACAC;QAAAC;QAAAC;QAAAC;MAAA,GACAC,8BACAA;QACA;QACA;UACA;QACA;MACA;IACA;IACA;MACA;MACA;MACA;QACAP;QACA;QACA;MACA;MACAG;QAAAC;QAAAC;MAAA,GACAE,8BACAA;QAAA;MAAA;IACA;IACA;MACA,uEACA;QACA;QACA;MACA;MACA;MACA;MACA;MACA;QACAP;QACA;QACA;MACA;MACAG;QAAAC;QAAAC;QAAAC;MAAA,GACAC,4BACAA,8BACAA;QACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;QACAxB;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACA;IACA;IACA;MACA;MACA;QACAU;QACA;QACA;MACA;MACA;QAAAU;MAAA;MACAP;QAAAC;QAAAC;QAAAC;MAAA,GACAC,8BACAA;QACA;QACA;UACA;QACA;MACA;IACA;EACA;EACAI;IACA3B;MACA4B;QACA,oEACA;UACA;QACA;UACA;QACA;MACA;MACAC;IACA;EACA;AACA","names":["components","VueGoodTable","MessageAnnounce","data","announce","sorts","direction","column","registrationsDesk","filter","ready","newreg","name","surname","company","my_company_is","role","email","office","columns","label","field","html","mounted","methods","isCheckedIn","checkPrintStatus","credentials","id","cmd","fetch","method","headers","body","then","killMessage","resetForm","ids","watch","handler","deep"],"sourceRoot":"src/components","sources":["FrontDesk.vue"],"sourcesContent":["<template>\r\n    <div class=\"front-desk sub-section\">\r\n        <message-announce v-if=\"announce\" :message=\"announce\" @closeMessage=\"killMessage()\" />\r\n        <div class=\"my-front-desk\">\r\n          <div class=\"registrations-list\">\r\n            <h3>Current registrations</h3>\r\n              <vue-good-table\r\n              :columns=\"columns\"\r\n              :rows=\"registrationsDesk\"\r\n              theme=\"black-rhino\"\r\n              :search-options=\"{\r\n                enabled: true\r\n              }\"\r\n              :pagination-options=\"{\r\n                  enabled: true,\r\n                  perPage: 50,\r\n                  position: 'bottom',\r\n              }\"\r\n              >\r\n              <template slot=\"table-row\" slot-scope=\"props\">\r\n                <div v-if=\"props.column.field == 'checked_in'\">\r\n                  <button\r\n                    style=\"display:flex;\r\n                      width:70px;\r\n                      align-items:center;\r\n                      justify-content:space-between;\r\n                      padding-right:10px;\"\r\n                      @click=\"updateAttendance(props.row.id)\">\r\n                    <svg style=\"width:20px;margin-right:10px;\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M384 368h24a40.12 40.12 0 0 0 40-40V168a40.12 40.12 0 0 0-40-40H104a40.12 40.12 0 0 0-40 40v160a40.12 40.12 0 0 0 40 40h24\"/><rect width=\"256\" height=\"208\" x=\"128\" y=\"240\" fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"32\" rx=\"24.32\" ry=\"24.32\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M384 128v-24a40.12 40.12 0 0 0-40-40H168a40.12 40.12 0 0 0-40 40v24\"/><circle cx=\"392\" cy=\"184\" r=\"24\"/></svg> Print\r\n                  </button>\r\n                </div>\r\n              </template>\r\n            </vue-good-table>\r\n          </div>\r\n          <div class=\"ad-hoc-registration-form\">\r\n            <form @submit.prevent=\"adHocRegistration()\">\r\n              <h3>Add new registration</h3>\r\n          <div class=\"double\">\r\n            <label for=\"fname\">First name (Required)\r\n              <input type=\"text\" id=\"fname\" v-model=\"newreg.name\"/></label>\r\n\r\n            <label for=\"lname\">Last name (Required)\r\n              <input type=\"text\" id=\"lname\" v-model=\"newreg.surname\"/></label>\r\n          </div>\r\n          <div class=\"company_type_wrapper double\">\r\n            <label for=\"company\">Company (Required)\r\n              <input type=\"text\" id=\"company\" v-model=\"newreg.company\"/></label>\r\n                <label for=\"company_type\">Company type (Required)\r\n                  <select name=\"company_type\" id=\"company_type\" v-model=\"newreg.my_company_is\">\r\n                      <option value=\"Brand, Retailer, Manufacturer or Online Shop\">\r\n                        Brand, Retailer, Manufacturer or Online Shop</option>\r\n                      <option value=\"Investor, Family Office,\">\r\n                        Investor, Family Office, Business Angel</option>\r\n                      <option value=\"Media &amp; Press\">\r\n                        Media / Press / Journalism</option>\r\n                      <option value=\"Public Administration / Institution\">\r\n                        Public Administration / Institution</option>\r\n                      <option value=\"Research Institute, University, School\">\r\n                        Research Institute, University, School</option>\r\n                      <option value=\"Vendor / Supplier of Services\">\r\n                        Vendor / Supplier of Services for Innovation and e-Commerce</option>\r\n                      <option value=\"Other\">Other</option>\r\n                  </select>\r\n                </label>\r\n            </div>\r\n            <div class=\"double\">\r\n              <label for=\"role\">Role (Required)\r\n                <input type=\"text\" id=\"role\" v-model=\"newreg.role\"/></label>\r\n                <label for=\"email\">Email address (Required)\r\n                <input type=\"email\" id=\"email\" v-model=\"newreg.email\"/></label>\r\n            </div>\r\n            <div class=\"double\">\r\n              <label for=\"phone\">Office phone (Required)\r\n              <input type=\"tel\" id=\"phone\" v-model=\"newreg.office\"/></label>\r\n                <button class=\"form-button\" style=\"margin-top:20px;\"\r\n                :class=\"{ 'ready' : this.ready}\">Submit</button>\r\n            </div>\r\n          </form>\r\n          </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport auth from '@/assets/auth';\r\nimport MessageAnnounce from './MessageAnnounce.vue';\r\nimport 'vue-good-table/dist/vue-good-table.css';\r\nimport { VueGoodTable } from 'vue-good-table';\r\n\r\nexport default {\r\n\r\n  components: {\r\n    VueGoodTable, MessageAnnounce,\r\n  },\r\n  data() {\r\n    return {\r\n      announce: null,\r\n      sorts: {\r\n        direction: 'desc',\r\n        column: null,\r\n      },\r\n      registrationsDesk: [],\r\n      filter: '',\r\n      ready: false,\r\n      newreg: {\r\n        name: '',\r\n        surname: '',\r\n        company: '',\r\n        my_company_is: '',\r\n        role: '',\r\n        email: '',\r\n        office: '',\r\n      },\r\n      columns: [\r\n        {\r\n          label: 'Name',\r\n          field: 'name',\r\n        },\r\n        {\r\n          label: 'Surname',\r\n          field: 'surname',\r\n        },\r\n        {\r\n          label: 'Company',\r\n          field: 'company',\r\n        },\r\n        {\r\n          label: 'Badge link',\r\n          field: this.checkPrintStatus,\r\n          html: true,\r\n        },\r\n        {\r\n          label: 'Checked in',\r\n          field: checked_in,\r\n          html: true,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.grabAllRegistrations();\r\n  },\r\n  methods: {\r\n    isCheckedIn(rowObj) {\r\n      return rowObj.checked_in;\r\n    },\r\n    checkPrintStatus(rowObj) {\r\n      if (rowObj.badge_link && rowObj.printed === '1') {\r\n        return `<a href='${rowObj.badge_link}' target='_blank'>View</a>`;\r\n      }\r\n      if (!rowObj.badge_link && rowObj.printed === '1') {\r\n        return `See <a href='${document.location.origin}/wp-content/plugins/eventer/badges/all_badges.zip' target='_blank'>zip folder</a> of all badges`;\r\n      }\r\n      return 'Not printed yet';\r\n    },\r\n    async updateAttendance(id, cmd) {\r\n      const url = '/wp-json/core-vue/do_my_check_in';\r\n      const headers = {\r\n        credentials: 'same-origin',\r\n        'Content-Type': 'application/json',\r\n        'X-WP-Nonce': this.nonce,\r\n      };\r\n      const data = JSON.stringify({ id, cmd });\r\n      fetch(url, { method: 'POST', headers, body: data })\r\n        .then((result) => result.json())\r\n        .then((result) => {\r\n          this.announce = result;\r\n          if (this.announce[0] !== 'Success') {\r\n            this.announce = ['Something went wrong', 'Please try again'];\r\n          }\r\n        });\r\n    },\r\n    async grabAllRegistrations() {\r\n      this.registrationsList = [];\r\n      const url = auth.allRegistrations;\r\n      const headers = {\r\n        credentials: 'same-origin',\r\n        'Content-Type': 'application/json',\r\n        'X-WP-Nonce': this.nonce,\r\n      };\r\n      fetch(url, { method: 'GET', headers })\r\n        .then((result) => result.json())\r\n        .then((result) => { this.registrationsDesk = result.reverse(); });\r\n    },\r\n    async adHocRegistration() {\r\n      if (!this.newreg.name || !this.newreg.surname || !this.newreg.email\r\n      || !this.newreg.company || !this.newreg.office) {\r\n        this.announce = ['Hold it right there...', 'You need to supply all required fields (name, surname, company, email, role and phone)'];\r\n        return;\r\n      }\r\n      this.ready = false;\r\n      const data = JSON.stringify(this.newreg);\r\n      const url = auth.adHocRegistration;\r\n      const headers = {\r\n        credentials: 'same-origin',\r\n        'Content-Type': 'application/json',\r\n        'X-WP-Nonce': this.nonce,\r\n      };\r\n      fetch(url, { method: 'POST', headers, body: data })\r\n        .then(this.oneToEdit = null)\r\n        .then((result) => result.json())\r\n        .then((result) => {\r\n          this.announce = result;\r\n          if (this.announce[0] === 'Success') {\r\n            this.resetForm();\r\n          }\r\n        });\r\n    },\r\n    killMessage() {\r\n      this.grabAllRegistrations();\r\n      this.announce = null;\r\n    },\r\n    resetForm() {\r\n      this.newreg = {\r\n        name: '',\r\n        surname: '',\r\n        company: '',\r\n        my_company_is: '',\r\n        role: '',\r\n        email: '',\r\n      };\r\n      this.ready = false;\r\n    },\r\n    async printBadge(id) {\r\n      const url = auth.printBadge;\r\n      const headers = {\r\n        credentials: 'same-origin',\r\n        'Content-Type': 'application/json',\r\n        'X-WP-Nonce': this.nonce,\r\n      };\r\n      const data = JSON.stringify({ ids: id });\r\n      fetch(url, { method: 'POST', headers, body: data })\r\n        .then((result) => result.json())\r\n        .then((result) => {\r\n          this.announce = result;\r\n          if (this.announce[0] === 'Success') {\r\n            this.grabAllRegistrations();\r\n          }\r\n        });\r\n    },\r\n  },\r\n  watch: {\r\n    newreg: {\r\n      handler() {\r\n        if (this.newreg.name && this.newreg.surname && this.newreg.email\r\n        && this.newreg.company) {\r\n          this.ready = true;\r\n        } else {\r\n          this.ready = false;\r\n        }\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}