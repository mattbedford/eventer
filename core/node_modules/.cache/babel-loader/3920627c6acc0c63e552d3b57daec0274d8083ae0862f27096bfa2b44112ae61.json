{"ast":null,"code":"import auth from '@/assets/auth';\nimport 'vue-good-table/dist/vue-good-table.css';\nimport { VueGoodTable } from 'vue-good-table';\nimport MessageAnnounce from './MessageAnnounce.vue';\nexport default {\n  name: 'RegistrationsList',\n  components: {\n    VueGoodTable,\n    MessageAnnounce\n  },\n  data() {\n    return {\n      oneToEdit: null,\n      announce: null,\n      registrationsList: [],\n      columns: [{\n        label: 'Name',\n        field: this.concatName\n      }, {\n        label: 'Email',\n        field: 'email'\n      }, {\n        label: 'Company',\n        field: 'company'\n      }, {\n        label: 'Job title',\n        field: 'role'\n      }, {\n        label: 'Company type',\n        field: 'my_company_is'\n      }, {\n        label: 'Coupon',\n        field: 'coupon_code'\n      }, {\n        label: 'Status',\n        field: this.paidAmount\n      }, {\n        label: 'Registered',\n        field: this.registrationDate\n      }, {\n        label: 'View/Edit',\n        field: 'edit'\n      }]\n    };\n  },\n  methods: {\n    async doSpeakerCodes() {\n      this.announce = ['Ok. Synching speakers', 'This may take a minute. Please do not close this tab.'];\n      const url = auth.speakerCodes;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'GET',\n        headers\n      }).then(result => result.json()).then(result => {\n        this.announce = result;\n      });\n    },\n    async grabRegistrations() {\n      this.registrationsList = [];\n      const url = auth.allRegistrations;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'GET',\n        headers\n      }).then(result => result.json()).then(result => {\n        this.registrationsList = result;\n      });\n    },\n    async syncAllWithHubspot() {\n      this.announce = ['Ok. Let\\'s do this', 'Please wait while we sync Hubspot data. This may take a few minutes. Please do not close this tab.'];\n      const url = auth.allSync;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'GET',\n        headers\n      }).then(result => result.json()).then(result => {\n        if (result[0] === 'Success') {\n          this.announce = result;\n        } else {\n          this.announce = ['Uh oh', 'Something went wrong with the sync. Sorry, we do not know any more than that.'];\n        }\n      });\n    },\n    async resendWelcomeEmail() {\n      const data = JSON.stringify(this.oneToEdit);\n      const url = auth.resendWelcome;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: data\n      }).then(result => result.json()).then(result => {\n        this.announce = result;\n      });\n    },\n    async editRegistration(cmd) {\n      if (cmd !== 'delete' && (!this.oneToEdit.name || !this.oneToEdit.surname || !this.oneToEdit.email || !this.oneToEdit.company || !this.oneToEdit.office_phone)) {\n        this.announce = ['Hold it right there...', 'You need to supply all required fields (name, surname, company, email and office phone)'];\n        return;\n      }\n      this.oneToEdit.command = cmd;\n      const data = JSON.stringify(this.oneToEdit);\n      const url = auth.editRegistrations;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: data\n      }).then(this.oneToEdit = null).then(result => result.json()).then(result => {\n        this.announce = result;\n      });\n    },\n    editButton(rowObj) {\n      let html = '';\n      const syncStatus = this.syncHsCheck(rowObj);\n      switch (syncStatus) {\n        case 'suspicious':\n          html = '<svg class=\"suspicious\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M85.57 446.25h340.86a32 32 0 0 0 28.17-47.17L284.18 82.58c-12.09-22.44-44.27-22.44-56.36 0L57.4 399.08a32 32 0 0 0 28.17 47.17z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m250.26 195.39 5.74 122 5.73-121.95a5.74 5.74 0 0 0-5.79-6h0a5.74 5.74 0 0 0-5.68 5.95z\"/><path d=\"M256 397.25a20 20 0 1 1 20-20 20 20 0 0 1-20 20z\"/></svg>';\n          break;\n        case 'ok':\n          html = '<svg class=\"all-ok\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M352 176 217.6 336 160 272\"/></svg>';\n          break;\n        case 'sync-me':\n          html = '<svg class=\"sync-me\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M434.67 285.59v-29.8c0-98.73-80.24-178.79-179.2-178.79a179 179 0 0 0-140.14 67.36m-38.53 82v29.8C76.8 355 157 435 256 435a180.45 180.45 0 0 0 140-66.92\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m32 256 44-44 46 44m358 0-44 44-46-44\"/></svg>';\n          break;\n        default:\n          html = '<svg class=\"all-ok\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M352 176 217.6 336 160 272\"/></svg></button>';\n      }\n      return html;\n    },\n    syncHsCheck(rowObj) {\n      const suspicious = this.checkSuspiciousFields(rowObj);\n      if (rowObj.hs_synched === '0' && suspicious === true) {\n        return 'suspicious';\n      }\n      if (rowObj.hs_synched === '0') {\n        return 'sync-me';\n      }\n      if (rowObj.hs_synched !== '0') {\n        return 'ok';\n      }\n      return 'ok';\n    },\n    async syncWithHubspot(rowId) {\n      let target = null;\n      if (this.oneToEdit == null) {\n        target = this.registrationsList[rowId];\n      } else {\n        target = this.oneToEdit;\n      }\n      if (!target.name || !target.surname || !target.email || !target.company || !target.office_phone) {\n        this.announce = ['Hold it right there...', 'You need to supply all required fields (name, surname, company, email and office phone)'];\n        return;\n      }\n      this.oneToEdit = null;\n      const data = JSON.stringify(target);\n      const url = auth.hubspotSync;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: data\n      }).then(result => result.json()).then(result => {\n        this.announce = result;\n      });\n    },\n    concatName(rowObj) {\n      return rowObj.name + ' ' + rowObj.surname;\n    },\n    paidAmount(rowObj) {\n      const stat = rowObj.payment_status;\n      if (stat === 'Pending') {\n        return 'Abandoned cart';\n      }\n      return rowObj.payment_status;\n    },\n    editRegistrant(rowId) {\n      this.oneToEdit = this.registrationsList[rowId];\n    },\n    sortLikes(rowObj) {\n      if (!rowObj.interests) return '';\n      return rowObj.interests.replaceAll(',', ', ');\n    },\n    welcomedOrNot(rowObj) {\n      if (rowObj.welcome_email_sent === '1' || rowObj.welcome_email_sent === 1) return 'Yes';\n      return 'No';\n    },\n    registrationDate(rowObj) {\n      if (!rowObj.sign_up_date) return '';\n      const s = rowObj.sign_up_date;\n      return s.split('-').reverse().join('-');\n    },\n    killMessage() {\n      this.grabRegistrations();\n      this.announce = null;\n    },\n    createRegistrant() {\n      this.oneToEdit = {};\n    },\n    rowStyleClassFn(row) {\n      return row.payment_status === 'pending' ? 'abandoned' : 'normal';\n    },\n    checkSuspiciousFields(rowObj) {\n      let score = 0;\n      // eslint-disable-next-line\n      let company = rowObj.company;\n      // eslint-disable-next-line\n      const email = rowObj.email;\n      if (email.indexOf('@') === -1) {\n        return true;\n      }\n      const domain = email.split('@')[1];\n      if (company.indexOf(' ') !== -1) {\n        company = rowObj.company.split(' ')[0].toLowerCase();\n        if (company.length < 3) {\n          company = rowObj.company.split(' ')[1].toLowerCase();\n        }\n      }\n      if (email.indexOf(rowObj.name.toLowerCase()) !== -1) {\n        // eslint-disable-next-line\n        score++;\n      }\n      if (email.indexOf(rowObj.surname.toLowerCase()) !== -1) {\n        // eslint-disable-next-line\n        score++;\n      }\n      if (domain.indexOf(company.toLowerCase()) !== -1) {\n        // eslint-disable-next-line\n        score++;\n      }\n      if (rowObj.website && rowObj.website.indexOf(domain) !== -1) {\n        // eslint-disable-next-line\n        score++;\n      }\n      if (score < 2) {\n        return true;\n      }\n      return false;\n    }\n  },\n  mounted() {\n    this.grabRegistrations();\n  }\n};","map":{"version":3,"mappings":"AAmOA;AACA;AACA;AACA;AAEA;EAEAA;EACAC;IACAC;IAAAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC,UACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA;IAEA;EACA;EACAC;IACA;MACA;MACA;MACA;QACAC;QACA;QACA;MACA;MACAC;QAAAC;QAAAC;MAAA,GACAC,8BACAA;QAAA;MAAA;IACA;IACA;MACA;MACA;MACA;QACAJ;QACA;QACA;MACA;MACAC;QAAAC;QAAAC;MAAA,GACAC,8BACAA;QAAA;MAAA;IACA;IACA;MACA;MACA;MACA;QACAJ;QACA;QACA;MACA;MACAC;QAAAC;QAAAC;MAAA,GACAC,8BACAA;QACA;UACA;QACA;UACA;QACA;MACA;IACA;IACA;MACA;MACA;MACA;QACAJ;QACA;QACA;MACA;MACAC;QAAAC;QAAAC;QAAAE;MAAA,GACAD,8BACAA;QAAA;MAAA;IACA;IACA;MACA,qGACA;QACA;QACA;MACA;MAEA;MACA;MACA;MACA;QACAJ;QACA;QACA;MACA;MACAC;QAAAC;QAAAC;QAAAE;MAAA,GACAD,4BACAA,8BACAA;QAAA;MAAA;IACA;IACAE;MACA;MACA;MAEA;QACA;UACAC;UACA;QACA;UACAA;UACA;QACA;UACAA;UACA;QACA;UACAA;MAAA;MAEA;IACA;IACAC;MACA;MACA;QACA;MACA;MACA;QACA;MACA;MACA;QACA;MACA;MACA;IACA;IACA;MACA;MACA;QACAC;MACA;QACAA;MACA;MACA,wDACA;QACA;QACA;MACA;MACA;MACA;MACA;MACA;QACAT;QACA;QACA;MACA;MACAC;QAAAC;QAAAC;QAAAE;MAAA,GACAD,8BACAA;QAAA;MAAA;IACA;IACAM;MACA;IACA;IACAC;MACA;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;QACA;MACA;MACA;MAEA;QACAC;QACA;UACAA;QACA;MACA;MACA;QACA;QACAC;MACA;MACA;QACA;QACAA;MACA;MACA;QACA;QACAA;MACA;MACA;QACA;QACAA;MACA;MAEA;QACA;MACA;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["name","components","VueGoodTable","MessageAnnounce","data","oneToEdit","announce","registrationsList","columns","label","field","methods","credentials","fetch","method","headers","then","body","editButton","html","syncHsCheck","target","concatName","paidAmount","editRegistrant","sortLikes","welcomedOrNot","registrationDate","killMessage","createRegistrant","rowStyleClassFn","checkSuspiciousFields","company","score","mounted"],"sourceRoot":"src/components","sources":["RegistrationsList.vue"],"sourcesContent":["<template>\n  <div class=\"sub-section\">\n    <message-announce v-if=\"announce\" :message=\"announce\" @closeMessage=\"killMessage()\" />\n    <div class=\"registrations-table\">\n        <vue-good-table\n            :columns=\"columns\"\n            :rows=\"registrationsList\"\n            :row-style-class=\"rowStyleClassFn\"\n            theme=\"black-rhino\"\n            :search-options=\"{\n              enabled: true\n            }\"\n            :pagination-options=\"{\n                enabled: true,\n                perPage: 50,\n                position: 'bottom',\n            }\">\n            <div class=\"buttons-bit\" slot=\"table-actions\">\n              <button class=\"create-new-registrant\" @click=\"createRegistrant()\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path d=\"M256 48C141.31 48 48 141.31 48 256s93.31 208 208 208 208-93.31 208-208S370.69 48 256 48zm80 224h-64v64a16 16 0 0 1-32 0v-64h-64a16 16 0 0 1 0-32h64v-64a16 16 0 0 1 32 0v64h64a16 16 0 0 1 0 32z\"/></svg>\n              </button>\n            </div>\n            <template slot=\"table-row\" slot-scope=\"props\">\n              <div v-if=\"props.column.field == 'edit'\">\n                <button @click=\"editRegistrant(props.row.originalIndex)\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon edit-me\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M384 224v184a40 40 0 0 1-40 40H104a40 40 0 0 1-40-40V168a40 40 0 0 1 40-40h167.48\"/><path d=\"M459.94 53.25a16.06 16.06 0 0 0-23.22-.56L424.35 65a8 8 0 0 0 0 11.31l11.34 11.32a8 8 0 0 0 11.34 0l12.06-12c6.1-6.09 6.67-16.01.85-22.38zM399.34 90 218.82 270.2a9 9 0 0 0-2.31 3.93L208.16 299a3.91 3.91 0 0 0 4.86 4.86l24.85-8.35a9 9 0 0 0 3.93-2.31L422 112.66a9 9 0 0 0 0-12.66l-9.95-10a9 9 0 0 0-12.71 0z\"/></svg>\n                </button>\n                <button class='sync-state'\n                  @click=\"syncWithHubspot(props.row.originalIndex)\"\n                  v-html=\"editButton(props.row)\">\n                </button>\n              </div>\n           </template>\n        </vue-good-table>\n        <div class=\"sync-all-section\">\n          <h3>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M434.67 285.59v-29.8c0-98.73-80.24-178.79-179.2-178.79a179 179 0 0 0-140.14 67.36m-38.53 82v29.8C76.8 355 157 435 256 435a180.45 180.45 0 0 0 140-66.92\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m32 256 44-44 46 44m358 0-44 44-46-44\"/></svg>\n            Sync all data with Hubspot</h3>\n            <p v-if=\"registrationsList.filter(item => item.hs_synched === '0').length < 75\">\n              You have\n              <strong>\n               {{registrationsList.filter(item => item.hs_synched === '0').length}}\n              </strong>\n               unsynced contacts\n            </p>\n            <p class=\"sync-warn\" v-else>Watch out. You have\n               {{registrationsList.filter(item => item.hs_synched === '0').length}}\n               unsynced contacts.\n              Trying to sync a large number (> 100) <em>will</em> lead to problems.\n               Sync now for a happier life.\n            </p>\n          <button @click=\"syncAllWithHubspot()\">Sync from Hubspot</button>\n          <br><br>\n          <p>\n            Hit this button to call Hubspot and import any registered users\n            who appear there but are not yet visibile in the table above.\n          </p>\n        </div>\n        <div class=\"export-section\">\n          <h3>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M336 176h40a40 40 0 0 1 40 40v208a40 40 0 0 1-40 40H136a40 40 0 0 1-40-40V216a40 40 0 0 1 40-40h40\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m176 272 80 80 80-80M256 48v288\"/></svg>\n            Export registration data</h3>\n          <a\n            class='exporter-butt'\n            href='/wp-content/plugins/eventer/export_registrations.php'\n            target='_blank'\n            >\n            Export registrations\n          </a>\n        </div>\n    </div>\n    <div class=\"edit-shelf\" v-if=\"(oneToEdit !== null)\" v-scroll-lock=\"oneToEdit\">\n      <div class=\"content-wrap\">\n        <span class=\"options-title\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path d=\"M459.94 53.25a16.06 16.06 0 0 0-23.22-.56L424.35 65a8 8 0 0 0 0 11.31l11.34 11.32a8 8 0 0 0 11.34 0l12.06-12c6.1-6.09 6.67-16.01.85-22.38zM399.34 90 218.82 270.2a9 9 0 0 0-2.31 3.93L208.16 299a3.91 3.91 0 0 0 4.86 4.86l24.85-8.35a9 9 0 0 0 3.93-2.31L422 112.66a9 9 0 0 0 0-12.66l-9.95-10a9 9 0 0 0-12.71 0z\"/><path d=\"M386.34 193.66 264.45 315.79A41.08 41.08 0 0 1 247.58 326l-25.9 8.67a35.92 35.92 0 0 1-44.33-44.33l8.67-25.9a41.08 41.08 0 0 1 10.19-16.87l122.13-121.91a8 8 0 0 0-5.65-13.66H104a56 56 0 0 0-56 56v240a56 56 0 0 0 56 56h240a56 56 0 0 0 56-56V199.31a8 8 0 0 0-13.66-5.65z\"/></svg>\n          <h2 v-if=\"oneToEdit.payment_status != 'Pending'\">Edit registration</h2>\n          <h2 v-else>View non-registered contact</h2>\n        </span>\n        <span class=\"sync-status-notice suspicious\"\n          v-if=\"oneToEdit.id && checkSuspiciousFields(oneToEdit)\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M85.57 446.25h340.86a32 32 0 0 0 28.17-47.17L284.18 82.58c-12.09-22.44-44.27-22.44-56.36 0L57.4 399.08a32 32 0 0 0 28.17 47.17z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m250.26 195.39 5.74 122 5.73-121.95a5.74 5.74 0 0 0-5.79-6h0a5.74 5.74 0 0 0-5.68 5.95z\"/><path d=\"M256 397.25a20 20 0 1 1 20-20 20 20 0 0 1-20 20z\"/></svg>\n          <span>\n            This data does not look right. please check company, email, website and name fields.\n          </span>\n        </span>\n        <span class=\"sync-status-notice to-sync\"\n          v-else-if=\"oneToEdit.id && oneToEdit.hs_synched !== '1'\"\n        >\n          <svg class=\"sync-me\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M434.67 285.59v-29.8c0-98.73-80.24-178.79-179.2-178.79a179 179 0 0 0-140.14 67.36m-38.53 82v29.8C76.8 355 157 435 256 435a180.45 180.45 0 0 0 140-66.92\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m32 256 44-44 46 44m358 0-44 44-46-44\"/></svg>\n          <span>\n            Not yet synced with Hubspot.\n          </span>\n        </span>\n\n        <button class=\"close-button\" @click=\"(oneToEdit = null)\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M320 320 192 192m0 128 128-128\"/></svg>\n        </button>\n        <form id=\"edit-registrant\">\n\n          <h2>User contacts</h2>\n          <input type=\"hidden\" v-model=\"oneToEdit.id\">\n          <div class=\"double\">\n            <label for=\"fname\">First name (Required)\n              <input type=\"text\" id=\"fname\" v-model=\"oneToEdit.name\"/></label>\n\n            <label for=\"lname\">Last name (Required)\n              <input type=\"text\" id=\"lname\" v-model=\"oneToEdit.surname\"/></label>\n          </div>\n\n          <div class=\"double\">\n            <label for=\"company\">Company (Required)\n              <input type=\"text\" id=\"company\" v-model=\"oneToEdit.company\"/></label>\n\n            <label for=\"website\">Website\n              <input type=\"url\" id=\"website\" v-model=\"oneToEdit.website\"/></label>\n          </div>\n\n          <div class=\"company_type_wrapper\">\n                <p>Company type</p>\n                <select name=\"company_type\" id=\"company_type\" v-model=\"oneToEdit.my_company_is\">\n                    <option value=\"Brand, Retailer, Manufacturer or Online Shop\">\n                      Brand, Retailer, Manufacturer or Online Shop</option>\n                    <option value=\"Investor, Family Office,\">\n                      Investor, Family Office, Business Angel</option>\n                    <option value=\"Media &amp; Press\">\n                      Media / Press / Journalism</option>\n                    <option value=\"Public Administration / Institution\">\n                      Public Administration / Institution</option>\n                    <option value=\"Research Institute, University, School\">\n                      Research Institute, University, School</option>\n                    <option value=\"Vendor / Supplier of Services\">\n                      Vendor / Supplier of Services for Innovation and e-Commerce</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n            </div>\n\n          <label for=\"role\">Role\n              <input type=\"text\" id=\"role\" v-model=\"oneToEdit.role\"/></label>\n\n          <label for=\"email\">Email address (Required)\n              <input type=\"email\" id=\"email\" v-model=\"oneToEdit.email\"/></label>\n\n          <div>\n            <label for=\"mobile\">Mobile phone\n              <input type=\"text\" id=\"company\" v-model=\"oneToEdit.mobile_phone\"/></label>\n\n            <label for=\"office\">Office phone (Required)\n              <input type=\"text\" id=\"office\" v-model=\"oneToEdit.office_phone\"/></label>\n          </div>\n\n          <h2>Address</h2>\n          <label for=\"address\">Address\n            <input type=\"text\" id=\"address\" v-model=\"oneToEdit.street_address\"/></label>\n          <label for=\"city\">City\n            <input type=\"text\" id=\"city\" v-model=\"oneToEdit.city\"/></label>\n          <label for=\"country\">Country\n            <input type=\"text\" id=\"country\" v-model=\"oneToEdit.country\"/></label>\n\n          <h2>Sign-up details</h2>\n          <ul v-if=\"oneToEdit.id\">\n            <li>Coupon: <strong>{{oneToEdit.coupon_code}}</strong></li>\n            <li>Billed: <strong>CHF {{oneToEdit.paid}}</strong>\n              <span v-if=\"oneToEdit.payment_status == 'Pending'\">\n                - contact will not be registered to event until payment</span>\n            </li>\n            <li :class=\"{pending : oneToEdit.payment_status == 'Pending'}\">\n              Payment status: <strong>{{oneToEdit.payment_status}}</strong>\n            </li>\n            <li>Sign-up date: <strong><span v-html=\"registrationDate(oneToEdit)\">\n            </span></strong></li>\n            <li>User interests: <strong><span v-html=\"sortLikes(oneToEdit)\">\n            </span></strong></li>\n            <!--<li>Welcome email sent: <strong><span v-html=\"welcomedOrNot(oneToEdit)\">\n            </span></strong>\n              <a style=\"margin-left:10px;text-decoration:none;\"\n              href=\"#\" >\n                Send now\n                <span style=\"font-size:20px;position:relative;bottom:-1px;\">\n                  &#8594;\n                </span>\n              </a>\n            </li>-->\n          </ul>\n\n          <div class=\"double\">\n            <button v-if=\"oneToEdit.id\"\n              class=\"save-edits form-button\"\n              type=\"button\" @click=\"editRegistration('edit')\">\n              Save edits\n            </button>\n            <button v-else\n              class=\"save-edits form-button\"\n              type=\"button\" @click=\"editRegistration('create')\">\n              Add registration\n            </button>\n            <button\n              v-if=\"oneToEdit.id && oneToEdit.hs_synched !== '1'\"\n              type=\"button\"\n              class=\"form-button hubspot-sync\"\n              @click=\"syncWithHubspot(oneToEdit.id)\"\n            >\n              Sync with Hubspot\n            </button>\n            <button\n              v-if=\"oneToEdit.id\"\n              class=\"delete-registration form-button\"\n              type=\"button\"\n              @click=\"editRegistration('delete')\">\n              Delete registration\n            </button>\n            <div class=\"delete-warning\"\n            style=\"background:#efefef;padding:10px;width:95%;\n            font-size:12px;color:#3a3a3a;margin:10px 0;width:100%;\">\n              Caution: When you delete a registration it will remove EVERYONE\n              with that email from our event list (and on Hubspot).\n              If you need to remove duplicates, delete <em>all</em>\n              users from the site with that email address and then add them again.\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport auth from '@/assets/auth';\nimport 'vue-good-table/dist/vue-good-table.css';\nimport { VueGoodTable } from 'vue-good-table';\nimport MessageAnnounce from './MessageAnnounce.vue';\n\nexport default {\n\n  name: 'RegistrationsList',\n  components: {\n    VueGoodTable, MessageAnnounce,\n  },\n  data() {\n    return {\n      oneToEdit: null,\n      announce: null,\n      registrationsList: [],\n      columns: [\n        {\n          label: 'Name',\n          field: this.concatName,\n        },\n        {\n          label: 'Email',\n          field: 'email',\n        },\n        {\n          label: 'Company',\n          field: 'company',\n        },\n        {\n          label: 'Job title',\n          field: 'role',\n        },\n        {\n          label: 'Company type',\n          field: 'my_company_is',\n        },\n        {\n          label: 'Coupon',\n          field: 'coupon_code',\n        },\n        {\n          label: 'Status',\n          field: this.paidAmount,\n        },\n        {\n          label: 'Registered',\n          field: this.registrationDate,\n        },\n        {\n          label: 'View/Edit',\n          field: 'edit',\n        },\n      ],\n    };\n  },\n  methods: {\n    async doSpeakerCodes() {\n      this.announce = ['Ok. Synching speakers', 'This may take a minute. Please do not close this tab.'];\n      const url = auth.speakerCodes;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce,\n      };\n      fetch(url, { method: 'GET', headers })\n        .then((result) => result.json())\n        .then((result) => { this.announce = result; });\n    },\n    async grabRegistrations() {\n      this.registrationsList = [];\n      const url = auth.allRegistrations;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce,\n      };\n      fetch(url, { method: 'GET', headers })\n        .then((result) => result.json())\n        .then((result) => { this.registrationsList = result; });\n    },\n    async syncAllWithHubspot() {\n      this.announce = ['Ok. Let\\'s do this', 'Please wait while we sync Hubspot data. This may take a few minutes. Please do not close this tab.'];\n      const url = auth.allSync;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce,\n      };\n      fetch(url, { method: 'GET', headers })\n        .then((result) => result.json())\n        .then((result) => {\n          if (result[0] === 'Success') {\n            this.announce = result;\n          } else {\n            this.announce = ['Uh oh', 'Something went wrong with the sync. Sorry, we do not know any more than that.'];\n          }\n        });\n    },\n    async resendWelcomeEmail() {\n      const data = JSON.stringify(this.oneToEdit);\n      const url = auth.resendWelcome;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce,\n      };\n      fetch(url, { method: 'POST', headers, body: data })\n        .then((result) => result.json())\n        .then((result) => { this.announce = result; });\n    },\n    async editRegistration(cmd) {\n      if ((cmd !== 'delete') && (!this.oneToEdit.name || !this.oneToEdit.surname || !this.oneToEdit.email\n      || !this.oneToEdit.company || !this.oneToEdit.office_phone)) {\n        this.announce = ['Hold it right there...', 'You need to supply all required fields (name, surname, company, email and office phone)'];\n        return;\n      }\n\n      this.oneToEdit.command = cmd;\n      const data = JSON.stringify(this.oneToEdit);\n      const url = auth.editRegistrations;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce,\n      };\n      fetch(url, { method: 'POST', headers, body: data })\n        .then(this.oneToEdit = null)\n        .then((result) => result.json())\n        .then((result) => { this.announce = result; });\n    },\n    editButton(rowObj) {\n      let html = '';\n      const syncStatus = this.syncHsCheck(rowObj);\n\n      switch (syncStatus) {\n        case 'suspicious':\n          html = '<svg class=\"suspicious\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M85.57 446.25h340.86a32 32 0 0 0 28.17-47.17L284.18 82.58c-12.09-22.44-44.27-22.44-56.36 0L57.4 399.08a32 32 0 0 0 28.17 47.17z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m250.26 195.39 5.74 122 5.73-121.95a5.74 5.74 0 0 0-5.79-6h0a5.74 5.74 0 0 0-5.68 5.95z\"/><path d=\"M256 397.25a20 20 0 1 1 20-20 20 20 0 0 1-20 20z\"/></svg>';\n          break;\n        case 'ok':\n          html = '<svg class=\"all-ok\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M352 176 217.6 336 160 272\"/></svg>';\n          break;\n        case 'sync-me':\n          html = '<svg class=\"sync-me\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M434.67 285.59v-29.8c0-98.73-80.24-178.79-179.2-178.79a179 179 0 0 0-140.14 67.36m-38.53 82v29.8C76.8 355 157 435 256 435a180.45 180.45 0 0 0 140-66.92\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"m32 256 44-44 46 44m358 0-44 44-46-44\"/></svg>';\n          break;\n        default:\n          html = '<svg class=\"all-ok\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M352 176 217.6 336 160 272\"/></svg></button>';\n      }\n      return html;\n    },\n    syncHsCheck(rowObj) {\n      const suspicious = this.checkSuspiciousFields(rowObj);\n      if (rowObj.hs_synched === '0' && suspicious === true) {\n        return 'suspicious';\n      }\n      if (rowObj.hs_synched === '0') {\n        return 'sync-me';\n      }\n      if (rowObj.hs_synched !== '0') {\n        return 'ok';\n      }\n      return 'ok';\n    },\n    async syncWithHubspot(rowId) {\n      let target = null;\n      if (this.oneToEdit == null) {\n        target = this.registrationsList[rowId];\n      } else {\n        target = this.oneToEdit;\n      }\n      if (!target.name || !target.surname || !target.email\n      || !target.company || !target.office_phone) {\n        this.announce = ['Hold it right there...', 'You need to supply all required fields (name, surname, company, email and office phone)'];\n        return;\n      }\n      this.oneToEdit = null;\n      const data = JSON.stringify(target);\n      const url = auth.hubspotSync;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce,\n      };\n      fetch(url, { method: 'POST', headers, body: data })\n        .then((result) => result.json())\n        .then((result) => { this.announce = result; });\n    },\n    concatName(rowObj) {\n      return rowObj.name + ' ' + rowObj.surname;\n    },\n    paidAmount(rowObj) {\n      const stat = (rowObj.payment_status);\n      if (stat === 'Pending') {\n        return 'Abandoned cart';\n      }\n      return rowObj.payment_status;\n    },\n    editRegistrant(rowId) {\n      this.oneToEdit = this.registrationsList[rowId];\n    },\n    sortLikes(rowObj) {\n      if (!rowObj.interests) return '';\n      return rowObj.interests.replaceAll(',', ', ');\n    },\n    welcomedOrNot(rowObj) {\n      if (rowObj.welcome_email_sent === '1' || rowObj.welcome_email_sent === 1) return 'Yes';\n      return 'No';\n    },\n    registrationDate(rowObj) {\n      if (!rowObj.sign_up_date) return '';\n      const s = rowObj.sign_up_date;\n      return s.split('-').reverse().join('-');\n    },\n    killMessage() {\n      this.grabRegistrations();\n      this.announce = null;\n    },\n    createRegistrant() {\n      this.oneToEdit = {};\n    },\n    rowStyleClassFn(row) {\n      return row.payment_status === 'pending' ? 'abandoned' : 'normal';\n    },\n    checkSuspiciousFields(rowObj) {\n      let score = 0;\n      // eslint-disable-next-line\n      let company = rowObj.company;\n      // eslint-disable-next-line\n      const email = rowObj.email;\n      if (email.indexOf('@') === -1) {\n        return true;\n      }\n      const domain = email.split('@')[1];\n\n      if (company.indexOf(' ') !== -1) {\n        company = rowObj.company.split(' ')[0].toLowerCase();\n        if (company.length < 3) {\n          company = rowObj.company.split(' ')[1].toLowerCase();\n        }\n      }\n      if (email.indexOf(rowObj.name.toLowerCase()) !== -1) {\n        // eslint-disable-next-line\n        score++;\n      }\n      if (email.indexOf(rowObj.surname.toLowerCase()) !== -1) {\n        // eslint-disable-next-line\n        score++;\n      }\n      if (domain.indexOf(company.toLowerCase()) !== -1) {\n        // eslint-disable-next-line\n        score++;\n      }\n      if (rowObj.website && rowObj.website.indexOf(domain) !== -1) {\n        // eslint-disable-next-line\n        score++;\n      }\n\n      if (score < 2) {\n        return true;\n      }\n      return false;\n    },\n  },\n  mounted() {\n    this.grabRegistrations();\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}