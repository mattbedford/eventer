{"ast":null,"code":"import auth from '@/assets/auth';\nimport 'vue-good-table/dist/vue-good-table.css';\nimport { VueGoodTable } from 'vue-good-table';\nimport MessageAnnounce from './MessageAnnounce.vue';\nexport default {\n  name: 'DataPlay',\n  components: {\n    VueGoodTable,\n    MessageAnnounce\n  },\n  data() {\n    return {\n      announce: null,\n      badgesList: [],\n      columns: [{\n        label: 'Name',\n        field: 'name'\n      }, {\n        label: 'Surname',\n        field: 'surname'\n      }, {\n        label: 'Email',\n        field: 'email'\n      }, {\n        label: 'Company',\n        field: 'company'\n      }, {\n        label: 'Job title',\n        field: 'role'\n      }, {\n        label: 'Printed?',\n        field: this.isPrinted\n      }, {\n        label: 'Link',\n        field: 'badge_link'\n      }, {\n        label: 'Print',\n        field: 'print'\n      }]\n    };\n  },\n  mounted() {\n    this.getAllRegistrants();\n  },\n  methods: {\n    async getAllRegistrants() {\n      this.badgesList = [];\n      const url = auth.allRegistrations;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'GET',\n        headers\n      }).then(result => result.json()).then(result => {\n        this.badgesList = result;\n      });\n    },\n    async printMe(arr) {\n      const url = auth.printBadge;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      const body = JSON.stringify(arr);\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body\n      }).then(result => result.json()).then(result => {\n        this.announce = result;\n      });\n    },\n    isPrinted(rowObj) {\n      return rowObj.printed === '1' ? 'Yes' : 'No';\n    },\n    killMessage() {\n      this.getAllRegistrants();\n      this.announce = null;\n    },\n    printSingleBadge(rowId) {\n      this.printMe([rowId]);\n    },\n    printAllBadges() {\n      // get ids from every row in badgesList variable\n      const allIds = this.badgesList.map(row => row.id);\n      this.printMe(allIds);\n    }\n  }\n};","map":{"version":3,"mappings":"AA8BA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IAAAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC,UACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA;IAEA;EACA;EACAC;IACA;EACA;EACAC;IACA;MACA;MACA;MACA;QACAC;QACA;QACA;MACA;MACAC;QAAAC;QAAAC;MAAA,GACAC,8BACAA;QACA;MACA;IACA;IACA;MACA;MACA;QACAJ;QACA;QACA;MACA;MACA;MACAC;QAAAC;QAAAC;QAAAE;MAAA,GACAD,8BACAA;QACA;MACA;IACA;IACAE;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;EACA;AACA","names":["name","components","VueGoodTable","MessageAnnounce","data","announce","badgesList","columns","label","field","mounted","methods","credentials","fetch","method","headers","then","body","isPrinted","killMessage","printSingleBadge","printAllBadges"],"sourceRoot":"src/components","sources":["DataPlay.vue"],"sourcesContent":["<template>\r\n  <div class=\"sub-section\">\r\n    <message-announce v-if=\"announce\" :message=\"announce\" @closeMessage=\"killMessage()\" />\r\n    <vue-good-table\r\n      :columns=\"columns\"\r\n      :rows=\"badgesList\"\r\n      theme=\"black-rhino\"\r\n      :search-options=\"{\r\n        enabled: true\r\n      }\"\r\n      :pagination-options=\"{\r\n          enabled: true,\r\n          perPage: 50,\r\n          position: 'bottom',\r\n      }\"\r\n    >\r\n    <template slot=\"table-row\" slot-scope=\"props\">\r\n      <div v-if=\"props.column.field == 'edit'\">\r\n        <button @click=\"printSingleBadge(props.row.originalIndex)\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M384 368h24a40.12 40.12 0 0 0 40-40V168a40.12 40.12 0 0 0-40-40H104a40.12 40.12 0 0 0-40 40v160a40.12 40.12 0 0 0 40 40h24\"/><rect width=\"256\" height=\"208\" x=\"128\" y=\"240\" fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"32\" rx=\"24.32\" ry=\"24.32\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M384 128v-24a40.12 40.12 0 0 0-40-40H168a40.12 40.12 0 0 0-40 40v24\"/><circle cx=\"392\" cy=\"184\" r=\"24\"/></svg>\r\n        </button>\r\n      </div>\r\n    </template>\r\n    </vue-good-table>\r\n    <div class=\"pies\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport auth from '@/assets/auth';\r\nimport 'vue-good-table/dist/vue-good-table.css';\r\nimport { VueGoodTable } from 'vue-good-table';\r\nimport MessageAnnounce from './MessageAnnounce.vue';\r\n\r\nexport default {\r\n  name: 'DataPlay',\r\n  components: {\r\n    VueGoodTable, MessageAnnounce,\r\n  },\r\n  data() {\r\n    return {\r\n      announce: null,\r\n      badgesList: [],\r\n      columns: [\r\n        {\r\n          label: 'Name',\r\n          field: 'name',\r\n        },\r\n        {\r\n          label: 'Surname',\r\n          field: 'surname',\r\n        },\r\n        {\r\n          label: 'Email',\r\n          field: 'email',\r\n        },\r\n        {\r\n          label: 'Company',\r\n          field: 'company',\r\n        },\r\n        {\r\n          label: 'Job title',\r\n          field: 'role',\r\n        },\r\n        {\r\n          label: 'Printed?',\r\n          field: this.isPrinted,\r\n        },\r\n        {\r\n          label: 'Link',\r\n          field: 'badge_link',\r\n        },\r\n        {\r\n          label: 'Print',\r\n          field: 'print',\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getAllRegistrants();\r\n  },\r\n  methods: {\r\n    async getAllRegistrants() {\r\n      this.badgesList = [];\r\n      const url = auth.allRegistrations;\r\n      const headers = {\r\n        credentials: 'same-origin',\r\n        'Content-Type': 'application/json',\r\n        'X-WP-Nonce': this.nonce,\r\n      };\r\n      fetch(url, { method: 'GET', headers })\r\n        .then((result) => result.json())\r\n        .then((result) => {\r\n          this.badgesList = result;\r\n        });\r\n    },\r\n    async printMe(arr) {\r\n      const url = auth.printBadge;\r\n      const headers = {\r\n        credentials: 'same-origin',\r\n        'Content-Type': 'application/json',\r\n        'X-WP-Nonce': this.nonce,\r\n      };\r\n      const body = JSON.stringify(arr);\r\n      fetch(url, { method: 'POST', headers, body })\r\n        .then((result) => result.json())\r\n        .then((result) => {\r\n          this.announce = result;\r\n        });\r\n    },\r\n    isPrinted(rowObj) {\r\n      return rowObj.printed === '1' ? 'Yes' : 'No';\r\n    },\r\n    killMessage() {\r\n      this.getAllRegistrants();\r\n      this.announce = null;\r\n    },\r\n    printSingleBadge(rowId) {\r\n      this.printMe([rowId]);\r\n    },\r\n    printAllBadges() {\r\n      // get ids from every row in badgesList variable\r\n      const allIds = this.badgesList.map((row) => row.id);\r\n      this.printMe(allIds);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}