{"ast":null,"code":"/* eslint-disable */\nimport auth from '@/assets/auth';\nimport MessageAnnounce from './MessageAnnounce.vue';\nimport 'vue-good-table/dist/vue-good-table.css';\nimport { VueGoodTable } from 'vue-good-table';\nexport default {\n  components: {\n    VueGoodTable,\n    MessageAnnounce\n  },\n  data() {\n    return {\n      announce: null,\n      sorts: {\n        direction: 'desc',\n        column: null\n      },\n      registrationsDesk: [],\n      filter: '',\n      ready: false,\n      newreg: {\n        name: '',\n        surname: '',\n        company: '',\n        my_company_is: '',\n        role: '',\n        email: '',\n        office: ''\n      },\n      columns: [{\n        label: 'Name',\n        field: 'name'\n      }, {\n        label: 'Surname',\n        field: 'surname'\n      }, {\n        label: 'Company',\n        field: 'company'\n      }, {\n        label: 'Badge link',\n        field: this.checkPrintStatus,\n        html: true\n      }, {\n        label: 'Checked in',\n        field: 'checkin'\n      }]\n    };\n  },\n  mounted() {\n    this.grabAllRegistrations();\n  },\n  methods: {\n    isCheckedIn(rowObj) {\n      return rowObj.checked_in;\n    },\n    checkPrintStatus(rowObj) {\n      if (rowObj.badge_link && rowObj.printed === '1') {\n        return `<a href='${rowObj.badge_link}' target='_blank'>View</a>`;\n      }\n      if (!rowObj.badge_link && rowObj.printed === '1') {\n        return `See <a href='${document.location.origin}/wp-content/plugins/eventer/badges/all_badges.zip' target='_blank'>zip folder</a> of all badges`;\n      }\n      return '';\n    },\n    async updateAttendance(id, cmd) {\n      const url = '/wp-json/core-vue/do_my_check_in';\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      const data = JSON.stringify({\n        id,\n        cmd\n      });\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: data\n      }).then(result => result.json()).then(result => {\n        this.announce = result;\n        if (this.announce[0] !== 'Success') {\n          this.announce = ['Something went wrong', 'Please try again'];\n        }\n      });\n    },\n    async grabAllRegistrations() {\n      this.registrationsList = [];\n      const url = auth.allRegistrations;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'GET',\n        headers\n      }).then(result => result.json()).then(result => {\n        this.registrationsDesk = result.reverse();\n      });\n    },\n    async adHocRegistration() {\n      if (!this.newreg.name || !this.newreg.surname || !this.newreg.email || !this.newreg.company || !this.newreg.office) {\n        this.announce = ['Hold it right there...', 'You need to supply all required fields (name, surname, company, email, role and phone)'];\n        return;\n      }\n      this.ready = false;\n      const data = JSON.stringify(this.newreg);\n      const url = auth.adHocRegistration;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: data\n      }).then(this.oneToEdit = null).then(result => result.json()).then(result => {\n        this.announce = result;\n        if (this.announce[0] === 'Success') {\n          this.resetForm();\n        }\n      });\n    },\n    killMessage() {\n      this.grabAllRegistrations();\n      this.announce = null;\n    },\n    resetForm() {\n      this.newreg = {\n        name: '',\n        surname: '',\n        company: '',\n        my_company_is: '',\n        role: '',\n        email: ''\n      };\n      this.ready = false;\n    },\n    async printBadge(id) {\n      const url = auth.printBadge;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce\n      };\n      const data = JSON.stringify({\n        ids: id\n      });\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: data\n      }).then(result => result.json()).then(result => {\n        this.announce = result;\n        if (this.announce[0] === 'Success') {\n          this.grabAllRegistrations();\n        }\n      });\n    }\n  },\n  watch: {\n    newreg: {\n      handler() {\n        if (this.newreg.name && this.newreg.surname && this.newreg.email && this.newreg.company) {\n          this.ready = true;\n        } else {\n          this.ready = false;\n        }\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"mappings":"AAwGA;AACA;AACA;AACA;AACA;AAEA;EAEAA;IACAC;IAAAC;EACA;EACAC;IACA;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC,UACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;QACAC;MACA,GACA;QACAF;QACAC;MACA;IAEA;EACA;EACAE;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QACA;MACA;MACA;QACA;MACA;MACA;IACA;IACA;MACA;MACA;QACAC;QACA;QACA;MACA;MACA;QAAAC;QAAAC;MAAA;MACAC;QAAAC;QAAAC;QAAAC;MAAA,GACAC,8BACAA;QACA;QACA;UACA;QACA;MACA;IACA;IACA;MACA;MACA;MACA;QACAP;QACA;QACA;MACA;MACAG;QAAAC;QAAAC;MAAA,GACAE,8BACAA;QAAA;MAAA;IACA;IACA;MACA,uEACA;QACA;QACA;MACA;MACA;MACA;MACA;MACA;QACAP;QACA;QACA;MACA;MACAG;QAAAC;QAAAC;QAAAC;MAAA,GACAC,4BACAA,8BACAA;QACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;QACAxB;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACA;IACA;IACA;MACA;MACA;QACAU;QACA;QACA;MACA;MACA;QAAAU;MAAA;MACAP;QAAAC;QAAAC;QAAAC;MAAA,GACAC,8BACAA;QACA;QACA;UACA;QACA;MACA;IACA;EACA;EACAI;IACA3B;MACA4B;QACA,oEACA;UACA;QACA;UACA;QACA;MACA;MACAC;IACA;EACA;AACA","names":["components","VueGoodTable","MessageAnnounce","data","announce","sorts","direction","column","registrationsDesk","filter","ready","newreg","name","surname","company","my_company_is","role","email","office","columns","label","field","html","mounted","methods","isCheckedIn","checkPrintStatus","credentials","id","cmd","fetch","method","headers","body","then","killMessage","resetForm","ids","watch","handler","deep"],"sourceRoot":"src/components","sources":["FrontDesk.vue"],"sourcesContent":["<template>\n    <div class=\"front-desk sub-section\">\n        <message-announce v-if=\"announce\" :message=\"announce\" @closeMessage=\"killMessage()\" />\n        <div class=\"my-front-desk\">\n          <div class=\"registrations-list\">\n            <h3>Current registrations</h3>\n              <vue-good-table\n              :columns=\"columns\"\n              :rows=\"registrationsDesk\"\n              theme=\"black-rhino\"\n              :search-options=\"{\n                enabled: true\n              }\"\n              :pagination-options=\"{\n                  enabled: true,\n                  perPage: 50,\n                  position: 'bottom',\n              }\"\n              >\n              <template slot=\"table-row\" slot-scope=\"props\">\n                <div v-if=\"props.column.field === 'checkin'\" class=\"last-col\">\n                  <button\n                    v-if=\"props.row.checked_in === '0'\"\n                    style=\"display:flex;\n                      width:70px;\n                      align-items:center;\n                      justify-content:space-between;\n                      padding-right:10px;\"\n                      class=\"check-button\"\n                      @click=\"updateAttendance(props.row.id, 'add')\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M352 176 217.6 336 160 272\"/></svg>\n                     Check in\n                  </button>\n                  <span v-else>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"check-icon ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M352 176 217.6 336 160 272\"/></svg>\n                    Guest checked in\n                  </span>\n                  <button\n                      style=\"display:flex;\n                      width:70px;\n                      align-items:center;\n                      justify-content:space-between;\n                      margin-left:auto;\n                      background: #7fc41c;\n                      padding-right:10px;\"\n                      class=\"check-button print\"\n                      @click=\"printBadge(props.row.id)\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"check-icon ionicon\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M384 368h24a40.12 40.12 0 0 0 40-40V168a40.12 40.12 0 0 0-40-40H104a40.12 40.12 0 0 0-40 40v160a40.12 40.12 0 0 0 40 40h24\"/><rect width=\"256\" height=\"208\" x=\"128\" y=\"240\" fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"32\" rx=\"24.32\" ry=\"24.32\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M384 128v-24a40.12 40.12 0 0 0-40-40H168a40.12 40.12 0 0 0-40 40v24\"/><circle cx=\"392\" cy=\"184\" r=\"24\"/></svg>\n                      Print\n                  </button>\n                </div>\n              </template>\n            </vue-good-table>\n          </div>\n          <div class=\"ad-hoc-registration-form\">\n            <form @submit.prevent=\"adHocRegistration()\">\n              <h3>Add new registration</h3>\n          <div class=\"double\">\n            <label for=\"fname\">First name (Required)\n              <input type=\"text\" id=\"fname\" v-model=\"newreg.name\"/></label>\n\n            <label for=\"lname\">Last name (Required)\n              <input type=\"text\" id=\"lname\" v-model=\"newreg.surname\"/></label>\n          </div>\n          <div class=\"company_type_wrapper double\">\n            <label for=\"company\">Company (Required)\n              <input type=\"text\" id=\"company\" v-model=\"newreg.company\"/></label>\n                <label for=\"company_type\">Company type (Required)\n                  <select name=\"company_type\" id=\"company_type\" v-model=\"newreg.my_company_is\">\n                      <option value=\"Brand, Retailer, Manufacturer or Online Shop\">\n                        Brand, Retailer, Manufacturer or Online Shop</option>\n                      <option value=\"Investor, Family Office,\">\n                        Investor, Family Office, Business Angel</option>\n                      <option value=\"Media &amp; Press\">\n                        Media / Press / Journalism</option>\n                      <option value=\"Public Administration / Institution\">\n                        Public Administration / Institution</option>\n                      <option value=\"Research Institute, University, School\">\n                        Research Institute, University, School</option>\n                      <option value=\"Vendor / Supplier of Services\">\n                        Vendor / Supplier of Services for Innovation and e-Commerce</option>\n                      <option value=\"Other\">Other</option>\n                  </select>\n                </label>\n            </div>\n            <div class=\"double\">\n              <label for=\"role\">Role (Required)\n                <input type=\"text\" id=\"role\" v-model=\"newreg.role\"/></label>\n                <label for=\"email\">Email address (Required)\n                <input type=\"email\" id=\"email\" v-model=\"newreg.email\"/></label>\n            </div>\n            <div class=\"double\">\n              <label for=\"phone\">Office phone (Required)\n              <input type=\"tel\" id=\"phone\" v-model=\"newreg.office\"/></label>\n                <button class=\"form-button\" style=\"margin-top:20px;\"\n                :class=\"{ 'ready' : this.ready}\">Submit</button>\n            </div>\n          </form>\n          </div>\n        </div>\n    </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport auth from '@/assets/auth';\nimport MessageAnnounce from './MessageAnnounce.vue';\nimport 'vue-good-table/dist/vue-good-table.css';\nimport { VueGoodTable } from 'vue-good-table';\n\nexport default {\n\n  components: {\n    VueGoodTable, MessageAnnounce,\n  },\n  data() {\n    return {\n      announce: null,\n      sorts: {\n        direction: 'desc',\n        column: null,\n      },\n      registrationsDesk: [],\n      filter: '',\n      ready: false,\n      newreg: {\n        name: '',\n        surname: '',\n        company: '',\n        my_company_is: '',\n        role: '',\n        email: '',\n        office: '',\n      },\n      columns: [\n        {\n          label: 'Name',\n          field: 'name',\n        },\n        {\n          label: 'Surname',\n          field: 'surname',\n        },\n        {\n          label: 'Company',\n          field: 'company',\n        },\n        {\n          label: 'Badge link',\n          field: this.checkPrintStatus,\n          html: true,\n        },\n        {\n          label: 'Checked in',\n          field: 'checkin',\n        },\n      ],\n    };\n  },\n  mounted() {\n    this.grabAllRegistrations();\n  },\n  methods: {\n    isCheckedIn(rowObj) {\n      return rowObj.checked_in;\n    },\n    checkPrintStatus(rowObj) {\n      if (rowObj.badge_link && rowObj.printed === '1') {\n        return `<a href='${rowObj.badge_link}' target='_blank'>View</a>`;\n      }\n      if (!rowObj.badge_link && rowObj.printed === '1') {\n        return `See <a href='${document.location.origin}/wp-content/plugins/eventer/badges/all_badges.zip' target='_blank'>zip folder</a> of all badges`;\n      }\n      return '';\n    },\n    async updateAttendance(id, cmd) {\n      const url = '/wp-json/core-vue/do_my_check_in';\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce,\n      };\n      const data = JSON.stringify({ id, cmd });\n      fetch(url, { method: 'POST', headers, body: data })\n        .then((result) => result.json())\n        .then((result) => {\n          this.announce = result;\n          if (this.announce[0] !== 'Success') {\n            this.announce = ['Something went wrong', 'Please try again'];\n          }\n        });\n    },\n    async grabAllRegistrations() {\n      this.registrationsList = [];\n      const url = auth.allRegistrations;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce,\n      };\n      fetch(url, { method: 'GET', headers })\n        .then((result) => result.json())\n        .then((result) => { this.registrationsDesk = result.reverse(); });\n    },\n    async adHocRegistration() {\n      if (!this.newreg.name || !this.newreg.surname || !this.newreg.email\n      || !this.newreg.company || !this.newreg.office) {\n        this.announce = ['Hold it right there...', 'You need to supply all required fields (name, surname, company, email, role and phone)'];\n        return;\n      }\n      this.ready = false;\n      const data = JSON.stringify(this.newreg);\n      const url = auth.adHocRegistration;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce,\n      };\n      fetch(url, { method: 'POST', headers, body: data })\n        .then(this.oneToEdit = null)\n        .then((result) => result.json())\n        .then((result) => {\n          this.announce = result;\n          if (this.announce[0] === 'Success') {\n            this.resetForm();\n          }\n        });\n    },\n    killMessage() {\n      this.grabAllRegistrations();\n      this.announce = null;\n    },\n    resetForm() {\n      this.newreg = {\n        name: '',\n        surname: '',\n        company: '',\n        my_company_is: '',\n        role: '',\n        email: '',\n      };\n      this.ready = false;\n    },\n    async printBadge(id) {\n      const url = auth.printBadge;\n      const headers = {\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce,\n      };\n      const data = JSON.stringify({ ids: id });\n      fetch(url, { method: 'POST', headers, body: data })\n        .then((result) => result.json())\n        .then((result) => {\n          this.announce = result;\n          if (this.announce[0] === 'Success') {\n            this.grabAllRegistrations();\n          }\n        });\n    },\n  },\n  watch: {\n    newreg: {\n      handler() {\n        if (this.newreg.name && this.newreg.surname && this.newreg.email\n        && this.newreg.company) {\n          this.ready = true;\n        } else {\n          this.ready = false;\n        }\n      },\n      deep: true,\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}